

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jan 28 15:39:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     0091                     SSPCON2         equ	145	;# 
    98     0092                     PR2             equ	146	;# 
    99     0093                     SSPADD          equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0098                     TXSTA           equ	152	;# 
   102     0099                     SPBRG           equ	153	;# 
   103     009C                     CMCON           equ	156	;# 
   104     009D                     CVRCON          equ	157	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009C                     CMCON           equ	156	;# 
   164     009D                     CVRCON          equ	157	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173     0034                     _RB4            set	52
   174     0032                     _RB2            set	50
   175     0031                     _RB1            set	49
   176     0030                     _RB0            set	48
   177     0040                     _RD0            set	64
   178     0041                     _RD1            set	65
   179     0042                     _RD2            set	66
   180     0043                     _RD3            set	67
   181     0086                     _TRISB          set	134
   182     0088                     _TRISD          set	136
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2F55   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_init_config:
   199     0070                     ?_read_switches:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_main:	
   203                           ; 2 bytes @ 0x0
   204                           
   205     0070                     ??_init_config:	
   206                           ; 2 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210     0070                     	ds	2
   211     0072                     ??_read_switches:
   212     0072                     ??_main:	
   213                           ; 1 bytes @ 0x2
   214                           
   215                           
   216                           ; 1 bytes @ 0x2
   217     0072                     	ds	3
   218     0075                     main@key:
   219                           
   220                           ; 2 bytes @ 0x5
   221     0075                     	ds	2
   222                           
   223                           	psect	maintext
   224     0755                     __pmaintext:	
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 85 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  key             2    5[COMMON] unsigned int 
   235 ;; Return value:  Size  Location     Type
   236 ;;                  2   44[None  ] int 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, pclath, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : B00/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   244 ;;      Params:         0       0       0       0       0
   245 ;;      Locals:         2       0       0       0       0
   246 ;;      Temps:          3       0       0       0       0
   247 ;;      Totals:         5       0       0       0       0
   248 ;;Total ram usage:        5 bytes
   249 ;; Hardware stack levels required when called: 1
   250 ;; This function calls:
   251 ;;		_init_config
   252 ;;		_read_switches
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258     0755                     _main:	
   259                           ;psect for function _main
   260                           
   261     0755                     l703:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   264                           
   265                           
   266                           ;main.c: 87:     init_config();
   267     0755  120A  118A  274C  120A  118A  	fcall	_init_config
   268     075A                     l705:
   269                           
   270                           ;main.c: 89:         unsigned int key=read_switches();
   271     075A  120A  118A  277E  120A  118A  	fcall	_read_switches
   272     075F  0871               	movf	?_read_switches+1,w
   273     0760  00F6               	movwf	main@key+1
   274     0761  0870               	movf	?_read_switches,w
   275     0762  00F5               	movwf	main@key
   276     0763                     l707:
   277                           
   278                           ;main.c: 91:         if (key ==1){
   279     0763  0375               	decf	main@key,w
   280     0764  0476               	iorwf	main@key+1,w
   281     0765  1D03               	btfss	3,2
   282     0766  2F68               	goto	u261
   283     0767  2F69               	goto	u260
   284     0768                     u261:
   285     0768  2F5A               	goto	l705
   286     0769                     u260:
   287     0769                     l709:
   288                           
   289                           ;main.c: 92:             RB4=!RB4;
   290     0769  3010               	movlw	16
   291     076A  1283               	bcf	3,5	;RP0=0, select bank0
   292     076B  1303               	bcf	3,6	;RP1=0, select bank0
   293     076C  0686               	xorwf	6,f
   294                           
   295                           ;main.c: 93:             _delay((unsigned long)((100)*(20000000/4000.0)));
   296     076D  3003               	movlw	3
   297     076E  00F4               	movwf	??_main+2
   298     076F  308A               	movlw	138
   299     0770  00F3               	movwf	??_main+1
   300     0771  3055               	movlw	85
   301     0772  00F2               	movwf	??_main
   302     0773                     u277:
   303     0773  0BF2               	decfsz	??_main,f
   304     0774  2F73               	goto	u277
   305     0775  0BF3               	decfsz	??_main+1,f
   306     0776  2F73               	goto	u277
   307     0777  0BF4               	decfsz	??_main+2,f
   308     0778  2F73               	goto	u277
   309     0779  2F7A               	nop2
   310     077A  2F5A               	goto	l705
   311     077B  120A  118A  2800   	ljmp	start
   312     077E                     __end_of_main:
   313                           
   314                           	psect	text1
   315     077E                     __ptext1:	
   316 ;; *************** function _read_switches *****************
   317 ;; Defined at:
   318 ;;		line 25 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  2    0[COMMON] int 
   325 ;; Registers used:
   326 ;;		wreg
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         2       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345     077E                     _read_switches:	
   346                           ;psect for function _read_switches
   347                           
   348     077E                     l653:	
   349                           ;incstack = 0
   350                           ; Regs used in _read_switches: [wreg]
   351                           
   352                           
   353                           ;main.c: 27:     RD3=0;
   354     077E  1283               	bcf	3,5	;RP0=0, select bank0
   355     077F  1303               	bcf	3,6	;RP1=0, select bank0
   356     0780  1188               	bcf	8,3	;volatile
   357                           
   358                           ;main.c: 28:     RD2=1;
   359     0781  1508               	bsf	8,2	;volatile
   360                           
   361                           ;main.c: 29:     RD1=1;
   362     0782  1488               	bsf	8,1	;volatile
   363                           
   364                           ;main.c: 30:     RD0=1;
   365     0783  1408               	bsf	8,0	;volatile
   366                           
   367                           ;main.c: 31:     if (RB0==0){
   368     0784  1806               	btfsc	6,0	;volatile
   369     0785  2F87               	goto	u141
   370     0786  2F88               	goto	u140
   371     0787                     u141:
   372     0787  2F8D               	goto	l28
   373     0788                     u140:
   374     0788                     l655:
   375                           
   376                           ;main.c: 32:         return 1;
   377     0788  3001               	movlw	1
   378     0789  00F0               	movwf	?_read_switches
   379     078A  3000               	movlw	0
   380     078B  00F1               	movwf	?_read_switches+1
   381     078C  2FFB               	goto	l29
   382     078D                     l28:	
   383                           ;main.c: 33:     }
   384                           
   385                           
   386                           ;main.c: 34:     if (RB1==0){
   387     078D  1886               	btfsc	6,1	;volatile
   388     078E  2F90               	goto	u151
   389     078F  2F91               	goto	u150
   390     0790                     u151:
   391     0790  2F96               	goto	l30
   392     0791                     u150:
   393     0791                     l659:
   394                           
   395                           ;main.c: 35:         return 2;
   396     0791  3002               	movlw	2
   397     0792  00F0               	movwf	?_read_switches
   398     0793  3000               	movlw	0
   399     0794  00F1               	movwf	?_read_switches+1
   400     0795  2FFB               	goto	l29
   401     0796                     l30:	
   402                           ;main.c: 36:     }
   403                           
   404                           
   405                           ;main.c: 37:     if (RB2==0){
   406     0796  1906               	btfsc	6,2	;volatile
   407     0797  2F99               	goto	u161
   408     0798  2F9A               	goto	u160
   409     0799                     u161:
   410     0799  2F9F               	goto	l31
   411     079A                     u160:
   412     079A                     l663:
   413                           
   414                           ;main.c: 38:         return 3;
   415     079A  3003               	movlw	3
   416     079B  00F0               	movwf	?_read_switches
   417     079C  3000               	movlw	0
   418     079D  00F1               	movwf	?_read_switches+1
   419     079E  2FFB               	goto	l29
   420     079F                     l31:	
   421                           ;main.c: 39:     }
   422                           
   423                           
   424                           ;main.c: 41:     RD3=1;
   425     079F  1588               	bsf	8,3	;volatile
   426                           
   427                           ;main.c: 42:     RD2=0;
   428     07A0  1108               	bcf	8,2	;volatile
   429                           
   430                           ;main.c: 43:     RD1=1;
   431     07A1  1488               	bsf	8,1	;volatile
   432                           
   433                           ;main.c: 44:     RD0=1;
   434     07A2  1408               	bsf	8,0	;volatile
   435                           
   436                           ;main.c: 45:     if (RB0==0){
   437     07A3  1806               	btfsc	6,0	;volatile
   438     07A4  2FA6               	goto	u171
   439     07A5  2FA7               	goto	u170
   440     07A6                     u171:
   441     07A6  2FAC               	goto	l32
   442     07A7                     u170:
   443     07A7                     l667:
   444                           
   445                           ;main.c: 46:         return 4;
   446     07A7  3004               	movlw	4
   447     07A8  00F0               	movwf	?_read_switches
   448     07A9  3000               	movlw	0
   449     07AA  00F1               	movwf	?_read_switches+1
   450     07AB  2FFB               	goto	l29
   451     07AC                     l32:	
   452                           ;main.c: 47:     }
   453                           
   454                           
   455                           ;main.c: 48:     if (RB1==0){
   456     07AC  1886               	btfsc	6,1	;volatile
   457     07AD  2FAF               	goto	u181
   458     07AE  2FB0               	goto	u180
   459     07AF                     u181:
   460     07AF  2FB5               	goto	l33
   461     07B0                     u180:
   462     07B0                     l671:
   463                           
   464                           ;main.c: 49:         return 5;
   465     07B0  3005               	movlw	5
   466     07B1  00F0               	movwf	?_read_switches
   467     07B2  3000               	movlw	0
   468     07B3  00F1               	movwf	?_read_switches+1
   469     07B4  2FFB               	goto	l29
   470     07B5                     l33:	
   471                           ;main.c: 50:     }
   472                           
   473                           
   474                           ;main.c: 51:     if (RB2==0){
   475     07B5  1906               	btfsc	6,2	;volatile
   476     07B6  2FB8               	goto	u191
   477     07B7  2FB9               	goto	u190
   478     07B8                     u191:
   479     07B8  2FBE               	goto	l34
   480     07B9                     u190:
   481     07B9                     l675:
   482                           
   483                           ;main.c: 52:         return 6;
   484     07B9  3006               	movlw	6
   485     07BA  00F0               	movwf	?_read_switches
   486     07BB  3000               	movlw	0
   487     07BC  00F1               	movwf	?_read_switches+1
   488     07BD  2FFB               	goto	l29
   489     07BE                     l34:	
   490                           ;main.c: 53:     }
   491                           
   492                           
   493                           ;main.c: 57:     RD3=1;
   494     07BE  1588               	bsf	8,3	;volatile
   495                           
   496                           ;main.c: 58:     RD2=1;
   497     07BF  1508               	bsf	8,2	;volatile
   498                           
   499                           ;main.c: 59:     RD1=0;
   500     07C0  1088               	bcf	8,1	;volatile
   501                           
   502                           ;main.c: 60:     RD0=1;
   503     07C1  1408               	bsf	8,0	;volatile
   504                           
   505                           ;main.c: 61:     if (RB0==0){
   506     07C2  1806               	btfsc	6,0	;volatile
   507     07C3  2FC5               	goto	u201
   508     07C4  2FC6               	goto	u200
   509     07C5                     u201:
   510     07C5  2FCB               	goto	l35
   511     07C6                     u200:
   512     07C6                     l679:
   513                           
   514                           ;main.c: 62:         return 7;
   515     07C6  3007               	movlw	7
   516     07C7  00F0               	movwf	?_read_switches
   517     07C8  3000               	movlw	0
   518     07C9  00F1               	movwf	?_read_switches+1
   519     07CA  2FFB               	goto	l29
   520     07CB                     l35:	
   521                           ;main.c: 63:     }
   522                           
   523                           
   524                           ;main.c: 64:     if (RB1==0){
   525     07CB  1886               	btfsc	6,1	;volatile
   526     07CC  2FCE               	goto	u211
   527     07CD  2FCF               	goto	u210
   528     07CE                     u211:
   529     07CE  2FD4               	goto	l36
   530     07CF                     u210:
   531     07CF                     l683:
   532                           
   533                           ;main.c: 65:         return 8;
   534     07CF  3008               	movlw	8
   535     07D0  00F0               	movwf	?_read_switches
   536     07D1  3000               	movlw	0
   537     07D2  00F1               	movwf	?_read_switches+1
   538     07D3  2FFB               	goto	l29
   539     07D4                     l36:	
   540                           ;main.c: 66:     }
   541                           
   542                           
   543                           ;main.c: 67:     if (RB2==0){
   544     07D4  1906               	btfsc	6,2	;volatile
   545     07D5  2FD7               	goto	u221
   546     07D6  2FD8               	goto	u220
   547     07D7                     u221:
   548     07D7  2FDD               	goto	l37
   549     07D8                     u220:
   550     07D8                     l687:
   551                           
   552                           ;main.c: 68:         return 9;
   553     07D8  3009               	movlw	9
   554     07D9  00F0               	movwf	?_read_switches
   555     07DA  3000               	movlw	0
   556     07DB  00F1               	movwf	?_read_switches+1
   557     07DC  2FFB               	goto	l29
   558     07DD                     l37:	
   559                           ;main.c: 69:     }
   560                           
   561                           
   562                           ;main.c: 71:     RD3=1;
   563     07DD  1588               	bsf	8,3	;volatile
   564                           
   565                           ;main.c: 72:     RD2=1;
   566     07DE  1508               	bsf	8,2	;volatile
   567                           
   568                           ;main.c: 73:     RD1=1;
   569     07DF  1488               	bsf	8,1	;volatile
   570                           
   571                           ;main.c: 74:     RD0=0;
   572     07E0  1008               	bcf	8,0	;volatile
   573                           
   574                           ;main.c: 75:     if (RB0==0){
   575     07E1  1806               	btfsc	6,0	;volatile
   576     07E2  2FE4               	goto	u231
   577     07E3  2FE5               	goto	u230
   578     07E4                     u231:
   579     07E4  2FEA               	goto	l38
   580     07E5                     u230:
   581     07E5                     l691:
   582                           
   583                           ;main.c: 76:         return 10;
   584     07E5  300A               	movlw	10
   585     07E6  00F0               	movwf	?_read_switches
   586     07E7  3000               	movlw	0
   587     07E8  00F1               	movwf	?_read_switches+1
   588     07E9  2FFB               	goto	l29
   589     07EA                     l38:	
   590                           ;main.c: 77:     }
   591                           
   592                           
   593                           ;main.c: 78:     if (RB1==0){
   594     07EA  1886               	btfsc	6,1	;volatile
   595     07EB  2FED               	goto	u241
   596     07EC  2FEE               	goto	u240
   597     07ED                     u241:
   598     07ED  2FF3               	goto	l39
   599     07EE                     u240:
   600     07EE                     l695:
   601                           
   602                           ;main.c: 79:         return 11;
   603     07EE  300B               	movlw	11
   604     07EF  00F0               	movwf	?_read_switches
   605     07F0  3000               	movlw	0
   606     07F1  00F1               	movwf	?_read_switches+1
   607     07F2  2FFB               	goto	l29
   608     07F3                     l39:	
   609                           ;main.c: 80:     }
   610                           
   611                           
   612                           ;main.c: 81:     if (RB2==0){
   613     07F3  1906               	btfsc	6,2	;volatile
   614     07F4  2FF6               	goto	u251
   615     07F5  2FF7               	goto	u250
   616     07F6                     u251:
   617     07F6  2FFB               	goto	l29
   618     07F7                     u250:
   619     07F7                     l699:
   620                           
   621                           ;main.c: 82:         return 12;
   622     07F7  300C               	movlw	12
   623     07F8  00F0               	movwf	?_read_switches
   624     07F9  3000               	movlw	0
   625     07FA  00F1               	movwf	?_read_switches+1
   626     07FB                     l29:
   627     07FB  0008               	return
   628     07FC                     __end_of_read_switches:
   629                           
   630                           	psect	text2
   631     074C                     __ptext2:	
   632 ;; *************** function _init_config *****************
   633 ;; Defined at:
   634 ;;		line 12 in file "main.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661     074C                     _init_config:	
   662                           ;psect for function _init_config
   663                           
   664     074C                     l593:	
   665                           ;incstack = 0
   666                           ; Regs used in _init_config: [wreg+status,2]
   667                           
   668                           
   669                           ;main.c: 21:     TRISD =TRISD & 0xF0;
   670     074C  1683               	bsf	3,5	;RP0=1, select bank1
   671     074D  1303               	bcf	3,6	;RP1=0, select bank1
   672     074E  0808               	movf	8,w	;volatile
   673     074F  39F0               	andlw	240
   674     0750  0088               	movwf	8	;volatile
   675                           
   676                           ;main.c: 22:     TRISB =TRISB | 0x07;
   677     0751  0806               	movf	6,w	;volatile
   678     0752  3807               	iorlw	7
   679     0753  0086               	movwf	6	;volatile
   680     0754                     l25:
   681     0754  0008               	return
   682     0755                     __end_of_init_config:
   683     0002                     ___latbits      equ	2
   684     007E                     btemp           set	126	;btemp
   685     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_switches

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      23
                                              2 COMMON     5     5      0
                        _init_config
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
   _read_switches

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jan 28 15:39:52 2025

                     l30 0796                       l31 079F                       l32 07AC  
                     l25 0754                       l33 07B5                       l34 07BE  
                     l35 07CB                       l36 07D4                       l28 078D  
                     l37 07DD                       l29 07FB                       l38 07EA  
                     l39 07F3                      l703 0755                      l705 075A  
                    l707 0763                      l653 077E                      l709 0769  
                    l671 07B0                      l663 079A                      l655 0788  
                    l593 074C                      l691 07E5                      l683 07CF  
                    l675 07B9                      l667 07A7                      l659 0791  
                    l695 07EE                      l687 07D8                      l679 07C6  
                    l699 07F7                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RD0 0040                      _RB4 0034  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    u200 07C6                      u201 07C5                      u210 07CF  
                    u211 07CE                      u220 07D8                      u140 0788  
                    u221 07D7                      u141 0787                      u230 07E5  
                    u150 0791                      u231 07E4                      u151 0790  
                    u240 07EE                      u160 079A                      u241 07ED  
                    u161 0799                      u250 07F7                      u170 07A7  
                    u251 07F6                      u171 07A6                      u180 07B0  
                    u260 0769                      u181 07AF                      u261 0768  
                    u190 07B9                      u191 07B8                      u277 0773  
                   _main 0755                     btemp 007E                     start 0000  
                  ?_main 0070             ?_init_config 0070                    _TRISB 0086  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 077E                   ??_main 0072  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0755  
          _read_switches 077E                  __ptext1 077E                  __ptext2 074C  
         ?_read_switches 0070                  main@key 0075     end_of_initialization 07FC  
    start_initialization 07FC          ??_read_switches 0072            ??_init_config 0070  
              ___latbits 0002      __end_of_init_config 0755              _init_config 074C  
  __end_of_read_switches 07FC  
