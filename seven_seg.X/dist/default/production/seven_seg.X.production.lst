

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 29 17:54:30 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175                           
   176                           	psect	idataCOMMON
   177     077D                     __pidataCOMMON:
   178                           
   179                           ;initializer for _seg
   180     077D  34C0               	retlw	192
   181     077E  34F9               	retlw	249
   182     077F  34A4               	retlw	164
   183     0780  34B0               	retlw	176
   184     0781  3499               	retlw	153
   185     0782  3492               	retlw	146
   186     0783  3482               	retlw	130
   187     0784  34D8               	retlw	216
   188     0785  3400               	retlw	0
   189     0786  3490               	retlw	144
   190     0007                     _PORTC          set	7
   191     0087                     _TRISC          set	135
   192                           
   193                           	psect	cinit
   194     07C0                     start_initialization:	
   195                           ; #config settings
   196                           
   197     07C0                     __initialization:
   198                           
   199                           ; Initialize objects allocated to COMMON
   200     07C0  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   201     07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   202     07C6  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   203     07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   204     07CC  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   205     07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   206     07D2  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   207     07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   208     07D8  120A  118A  2781  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   209     07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   210     07DE  120A  118A  2782  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   211     07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   212     07E4  120A  118A  2783  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   213     07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   214     07EA  120A  118A  2784  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   215     07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   216     07F0  120A  118A  2785  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   217     07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   218     07F6  120A  118A  2786  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   219     07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   220     07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223     07FC                     __end_of__initialization:
   224     07FC  0183               	clrf	3
   225     07FD  120A  118A  2F9A   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	dataCOMMON
   228     0070                     __pdataCOMMON:
   229     0070                     _seg:
   230     0070                     	ds	10
   231                           
   232                           	psect	inittext
   233     0787                     init_fetch0:	
   234                           ;	Called with low address in FSR and high address in W
   235                           
   236     0787  087E               	movf	btemp,w
   237     0788  008A               	movwf	10
   238     0789  087F               	movf	btemp+1,w
   239     078A  0082               	movwf	2
   240     078B                     init_ram0:	
   241                           ;Called with:
   242                           ;	high address of idata address in btemp 
   243                           ;	low address of idata address in btemp+1 
   244                           ;	low address of data in FSR
   245                           ;	high address + 1 of data in btemp-1
   246                           
   247     078B  120A  118A  2787  120A  118A  	fcall	init_fetch0
   248     0790  0080               	movwf	0
   249     0791  0A84               	incf	4,f
   250     0792  0804               	movf	4,w
   251     0793  067D               	xorwf	btemp+-1,w
   252     0794  1903               	btfsc	3,2
   253     0795  3400               	retlw	0
   254     0796  0AFF               	incf	btemp+1,f
   255     0797  1903               	btfsc	3,2
   256     0798  0AFE               	incf	btemp,f
   257     0799  2F8B               	goto	init_ram0
   258                           
   259                           	psect	cstackCOMMON
   260     007A                     __pcstackCOMMON:
   261     007A                     ?_main:
   262     007A                     ??_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267     007A                     	ds	3
   268     007D                     main@i:
   269                           
   270                           ; 1 bytes @ 0x3
   271     007D                     	ds	1
   272                           
   273                           	psect	maintext
   274     079A                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 15 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  i               1    3[COMMON] unsigned char 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         1       0       0       0       0
   296 ;;      Temps:          3       0       0       0       0
   297 ;;      Totals:         4       0       0       0       0
   298 ;;Total ram usage:        4 bytes
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306     079A                     _main:	
   307                           ;psect for function _main
   308                           
   309     079A                     l562:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   312                           
   313     079A  1683               	bsf	3,5	;RP0=1, select bank1
   314     079B  1303               	bcf	3,6	;RP1=0, select bank1
   315     079C  0187               	clrf	7	;volatile
   316     079D  1283               	bcf	3,5	;RP0=0, select bank0
   317     079E  1303               	bcf	3,6	;RP1=0, select bank0
   318     079F  0187               	clrf	7	;volatile
   319     07A0                     l13:
   320     07A0  01FD               	clrf	main@i
   321     07A1                     l568:
   322     07A1  087D               	movf	main@i,w
   323     07A2  3E70               	addlw	(low (_seg| 0))& (0+255)
   324     07A3  0084               	movwf	4
   325     07A4  0800               	movf	0,w
   326     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   327     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   328     07A7  0087               	movwf	7	;volatile
   329     07A8                     l570:
   330     07A8  3002               	movlw	2
   331     07A9  00FC               	movwf	??_main+2
   332     07AA  3086               	movlw	134
   333     07AB  00FB               	movwf	??_main+1
   334     07AC  3099               	movlw	153
   335     07AD  00FA               	movwf	??_main
   336     07AE                     u27:
   337     07AE  0BFA               	decfsz	??_main,f
   338     07AF  2FAE               	goto	u27
   339     07B0  0BFB               	decfsz	??_main+1,f
   340     07B1  2FAE               	goto	u27
   341     07B2  0BFC               	decfsz	??_main+2,f
   342     07B3  2FAE               	goto	u27
   343     07B4                     l572:
   344     07B4  3001               	movlw	1
   345     07B5  07FD               	addwf	main@i,f
   346     07B6                     l574:
   347     07B6  300A               	movlw	10
   348     07B7  027D               	subwf	main@i,w
   349     07B8  1C03               	skipc
   350     07B9  2FBB               	goto	u11
   351     07BA  2FBC               	goto	u10
   352     07BB                     u11:
   353     07BB  2FA1               	goto	l568
   354     07BC                     u10:
   355     07BC  2FA0               	goto	l13
   356     07BD  120A  118A  2800   	ljmp	start
   357     07C0                     __end_of_main:
   358     0002                     ___latbits      equ	2
   359     007E                     btemp           set	126	;btemp
   360     007E                     wtemp0          set	126
   361                           
   362                           	psect	config
   363                           
   364                           ;Config register CONFIG @ 0x2007
   365                           ;	Oscillator Selection bits
   366                           ;	FOSC = HS, HS oscillator
   367                           ;	Watchdog Timer Enable bit
   368                           ;	WDTE = OFF, WDT disabled
   369                           ;	Power-up Timer Enable bit
   370                           ;	PWRTE = OFF, PWRT disabled
   371                           ;	Brown-out Reset Enable bit
   372                           ;	BOREN = OFF, BOR disabled
   373                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   374                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   375                           ;	Data EEPROM Memory Code Protection bit
   376                           ;	CPD = OFF, Data EEPROM code protection off
   377                           ;	Flash Program Memory Write Enable bits
   378                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   379                           ;	In-Circuit Debugger Mode bit
   380                           ;	DEBUG = 0x1, unprogrammed default
   381                           ;	Flash Program Memory Code Protection bit
   382                           ;	CP = OFF, Code protection off
   383     2007                     	org	8199
   384     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       0      0.0%
BITBANK0            80      0       0      0.0%
COMMON              14      4      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      14      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 29 17:54:30 2025

                      pc 0002                       l13 07A0                       u10 07BC  
                     u11 07BB                       u27 07AE                       fsr 0004  
                    l570 07A8                      l562 079A                      l572 07B4  
                    l574 07B6                      l568 07A1                      _seg 0070  
                    fsr0 0004                      indf 0000                     _main 079A  
                   btemp 007E                     start 0000                    ?_main 007A  
                  _PORTC 0007                    _TRISC 0087                    main@i 007D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07C0             __end_of_main 07C0                   ??_main 007A  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007A  
             __pmaintext 079A     end_of_initialization 07FC            __pidataCOMMON 077D  
    start_initialization 07C0               init_fetch0 0787                ___latbits 0002  
               init_ram0 078B  
