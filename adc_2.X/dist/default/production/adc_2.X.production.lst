

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat May 03 03:36:34 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0004                     fsr             equ	4
    55     0004                     fsr0            equ	4
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0000                     INDF            equ	0	;# 
    63     0001                     TMR0            equ	1	;# 
    64     0002                     PCL             equ	2	;# 
    65     0003                     STATUS          equ	3	;# 
    66     0004                     FSR             equ	4	;# 
    67     0005                     PORTA           equ	5	;# 
    68     0006                     PORTB           equ	6	;# 
    69     0007                     PORTC           equ	7	;# 
    70     0008                     PORTD           equ	8	;# 
    71     0009                     PORTE           equ	9	;# 
    72     000A                     PCLATH          equ	10	;# 
    73     000B                     INTCON          equ	11	;# 
    74     000C                     PIR1            equ	12	;# 
    75     000D                     PIR2            equ	13	;# 
    76     000E                     TMR1            equ	14	;# 
    77     000E                     TMR1L           equ	14	;# 
    78     000F                     TMR1H           equ	15	;# 
    79     0010                     T1CON           equ	16	;# 
    80     0011                     TMR2            equ	17	;# 
    81     0012                     T2CON           equ	18	;# 
    82     0013                     SSPBUF          equ	19	;# 
    83     0014                     SSPCON          equ	20	;# 
    84     0015                     CCPR1           equ	21	;# 
    85     0015                     CCPR1L          equ	21	;# 
    86     0016                     CCPR1H          equ	22	;# 
    87     0017                     CCP1CON         equ	23	;# 
    88     0018                     RCSTA           equ	24	;# 
    89     0019                     TXREG           equ	25	;# 
    90     001A                     RCREG           equ	26	;# 
    91     001B                     CCPR2           equ	27	;# 
    92     001B                     CCPR2L          equ	27	;# 
    93     001C                     CCPR2H          equ	28	;# 
    94     001D                     CCP2CON         equ	29	;# 
    95     001E                     ADRESH          equ	30	;# 
    96     001F                     ADCON0          equ	31	;# 
    97     0081                     OPTION_REG      equ	129	;# 
    98     0085                     TRISA           equ	133	;# 
    99     0086                     TRISB           equ	134	;# 
   100     0087                     TRISC           equ	135	;# 
   101     0088                     TRISD           equ	136	;# 
   102     0089                     TRISE           equ	137	;# 
   103     008C                     PIE1            equ	140	;# 
   104     008D                     PIE2            equ	141	;# 
   105     008E                     PCON            equ	142	;# 
   106     0091                     SSPCON2         equ	145	;# 
   107     0092                     PR2             equ	146	;# 
   108     0093                     SSPADD          equ	147	;# 
   109     0094                     SSPSTAT         equ	148	;# 
   110     0098                     TXSTA           equ	152	;# 
   111     0099                     SPBRG           equ	153	;# 
   112     009C                     CMCON           equ	156	;# 
   113     009D                     CVRCON          equ	157	;# 
   114     009E                     ADRESL          equ	158	;# 
   115     009F                     ADCON1          equ	159	;# 
   116     010C                     EEDATA          equ	268	;# 
   117     010D                     EEADR           equ	269	;# 
   118     010E                     EEDATH          equ	270	;# 
   119     010F                     EEADRH          equ	271	;# 
   120     018C                     EECON1          equ	396	;# 
   121     018D                     EECON2          equ	397	;# 
   122     0000                     INDF            equ	0	;# 
   123     0001                     TMR0            equ	1	;# 
   124     0002                     PCL             equ	2	;# 
   125     0003                     STATUS          equ	3	;# 
   126     0004                     FSR             equ	4	;# 
   127     0005                     PORTA           equ	5	;# 
   128     0006                     PORTB           equ	6	;# 
   129     0007                     PORTC           equ	7	;# 
   130     0008                     PORTD           equ	8	;# 
   131     0009                     PORTE           equ	9	;# 
   132     000A                     PCLATH          equ	10	;# 
   133     000B                     INTCON          equ	11	;# 
   134     000C                     PIR1            equ	12	;# 
   135     000D                     PIR2            equ	13	;# 
   136     000E                     TMR1            equ	14	;# 
   137     000E                     TMR1L           equ	14	;# 
   138     000F                     TMR1H           equ	15	;# 
   139     0010                     T1CON           equ	16	;# 
   140     0011                     TMR2            equ	17	;# 
   141     0012                     T2CON           equ	18	;# 
   142     0013                     SSPBUF          equ	19	;# 
   143     0014                     SSPCON          equ	20	;# 
   144     0015                     CCPR1           equ	21	;# 
   145     0015                     CCPR1L          equ	21	;# 
   146     0016                     CCPR1H          equ	22	;# 
   147     0017                     CCP1CON         equ	23	;# 
   148     0018                     RCSTA           equ	24	;# 
   149     0019                     TXREG           equ	25	;# 
   150     001A                     RCREG           equ	26	;# 
   151     001B                     CCPR2           equ	27	;# 
   152     001B                     CCPR2L          equ	27	;# 
   153     001C                     CCPR2H          equ	28	;# 
   154     001D                     CCP2CON         equ	29	;# 
   155     001E                     ADRESH          equ	30	;# 
   156     001F                     ADCON0          equ	31	;# 
   157     0081                     OPTION_REG      equ	129	;# 
   158     0085                     TRISA           equ	133	;# 
   159     0086                     TRISB           equ	134	;# 
   160     0087                     TRISC           equ	135	;# 
   161     0088                     TRISD           equ	136	;# 
   162     0089                     TRISE           equ	137	;# 
   163     008C                     PIE1            equ	140	;# 
   164     008D                     PIE2            equ	141	;# 
   165     008E                     PCON            equ	142	;# 
   166     0091                     SSPCON2         equ	145	;# 
   167     0092                     PR2             equ	146	;# 
   168     0093                     SSPADD          equ	147	;# 
   169     0094                     SSPSTAT         equ	148	;# 
   170     0098                     TXSTA           equ	152	;# 
   171     0099                     SPBRG           equ	153	;# 
   172     009C                     CMCON           equ	156	;# 
   173     009D                     CVRCON          equ	157	;# 
   174     009E                     ADRESL          equ	158	;# 
   175     009F                     ADCON1          equ	159	;# 
   176     010C                     EEDATA          equ	268	;# 
   177     010D                     EEADR           equ	269	;# 
   178     010E                     EEDATH          equ	270	;# 
   179     010F                     EEADRH          equ	271	;# 
   180     018C                     EECON1          equ	396	;# 
   181     018D                     EECON2          equ	397	;# 
   182     001E                     _ADRESH         set	30
   183     001F                     _ADCON0         set	31
   184     0008                     _PORTD          set	8
   185     0038                     _RC0            set	56
   186     003B                     _RC3            set	59
   187     009E                     _ADRESL         set	158
   188     0085                     _TRISA          set	133
   189     009F                     _ADCON1         set	159
   190     0088                     _TRISD          set	136
   191     0087                     _TRISC          set	135
   192                           
   193                           	psect	cinit
   194     07F4                     start_initialization:	
   195                           ; #config settings
   196                           
   197     07F4                     __initialization:
   198                           
   199                           ; Clear objects allocated to BANK0
   200     07F4  1283               	bcf	3,5	;RP0=0, select bank0
   201     07F5  1303               	bcf	3,6	;RP1=0, select bank0
   202     07F6  01B6               	clrf	__pbssBANK0& (0+127)
   203     07F7  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   204     07F8  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   205     07F9  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   206     07FA  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   207     07FB  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2EE8   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	bssBANK0
   216     0036                     __pbssBANK0:
   217     0036                     _adc_volt:
   218     0036                     	ds	2
   219     0038                     _adc_low:
   220     0038                     	ds	2
   221     003A                     _adc_high:
   222     003A                     	ds	2
   223                           
   224                           	psect	cstackCOMMON
   225     0070                     __pcstackCOMMON:
   226     0070                     ?_lcd_command:
   227     0070                     ?_lcd_data:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_lcd_init:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?___lwdiv:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?___lmul:	
   240                           ; 2 bytes @ 0x0
   241                           
   242     0070                     ___lwdiv@divisor:	
   243                           ; 4 bytes @ 0x0
   244                           
   245     0070                     ___lmul@multiplier:	
   246                           ; 2 bytes @ 0x0
   247                           
   248     0070                     ??_lcd_command:	
   249                           ; 4 bytes @ 0x0
   250                           
   251     0070                     ??_lcd_data:	
   252                           ; 1 bytes @ 0x0
   253                           
   254                           
   255                           ; 1 bytes @ 0x0
   256     0070                     	ds	2
   257     0072                     lcd_command@cmd:
   258     0072                     lcd_data@data:	
   259                           ; 1 bytes @ 0x2
   260                           
   261     0072                     ___lwdiv@dividend:	
   262                           ; 1 bytes @ 0x2
   263                           
   264                           
   265                           ; 2 bytes @ 0x2
   266     0072                     	ds	1
   267     0073                     ??_lcd_init:
   268                           
   269                           ; 1 bytes @ 0x3
   270     0073                     	ds	1
   271     0074                     ___lwdiv@quotient:
   272     0074                     ___lmul@multiplicand:	
   273                           ; 2 bytes @ 0x4
   274                           
   275     0074                     ??___lwdiv:	
   276                           ; 4 bytes @ 0x4
   277                           
   278                           
   279                           ; 1 bytes @ 0x4
   280     0074                     	ds	2
   281     0076                     ___lwdiv@counter:
   282                           
   283                           ; 1 bytes @ 0x6
   284     0076                     	ds	1
   285     0077                     ?___lwmod:
   286     0077                     ___lwmod@divisor:	
   287                           ; 2 bytes @ 0x7
   288                           
   289                           
   290                           ; 2 bytes @ 0x7
   291     0077                     	ds	1
   292     0078                     ??___lmul:
   293                           
   294                           ; 1 bytes @ 0x8
   295     0078                     	ds	1
   296     0079                     ___lwmod@dividend:
   297     0079                     ___lmul@product:	
   298                           ; 2 bytes @ 0x9
   299                           
   300                           
   301                           ; 4 bytes @ 0x9
   302     0079                     	ds	2
   303     007B                     ___lwmod@counter:
   304     007B                     ??___lwmod:	
   305                           ; 1 bytes @ 0xB
   306                           
   307                           
   308                           ; 1 bytes @ 0xB
   309     007B                     	ds	1
   310     007C                     ?_lcd_print_number:
   311     007C                     lcd_print_number@val:	
   312                           ; 1 bytes @ 0xC
   313                           
   314                           
   315                           ; 2 bytes @ 0xC
   316     007C                     	ds	1
   317     007D                     ??___lldiv:
   318                           
   319                           ; 1 bytes @ 0xD
   320     007D                     	ds	1
   321     007E                     ??_lcd_print_number:
   322                           
   323                           	psect	cstackBANK0
   324     0020                     __pcstackBANK0:	
   325                           ; 1 bytes @ 0xE
   326                           
   327     0020                     ?___lldiv:
   328     0020                     ___lldiv@divisor:	
   329                           ; 4 bytes @ 0x0
   330                           
   331                           
   332                           ; 4 bytes @ 0x0
   333     0020                     	ds	4
   334     0024                     ___lldiv@dividend:
   335                           
   336                           ; 4 bytes @ 0x4
   337     0024                     	ds	4
   338     0028                     ___lldiv@quotient:
   339                           
   340                           ; 4 bytes @ 0x8
   341     0028                     	ds	4
   342     002C                     ___lldiv@counter:
   343                           
   344                           ; 1 bytes @ 0xC
   345     002C                     	ds	1
   346     002D                     ??_main:
   347                           
   348                           ; 1 bytes @ 0xD
   349     002D                     	ds	3
   350     0030                     main@adc_val0:
   351                           
   352                           ; 2 bytes @ 0x10
   353     0030                     	ds	2
   354     0032                     main@adc_val4:
   355                           
   356                           ; 2 bytes @ 0x12
   357     0032                     	ds	2
   358     0034                     main@adc_val4_1:
   359                           
   360                           ; 2 bytes @ 0x14
   361     0034                     	ds	2
   362                           
   363                           	psect	maintext
   364     06E8                     __pmaintext:	
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 73 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  adc_val4_1      2   20[BANK0 ] unsigned int 
   375 ;;  adc_val4        2   18[BANK0 ] unsigned int 
   376 ;;  adc_val0        2   16[BANK0 ] unsigned int 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       6       0       0       0
   388 ;;      Temps:          0       3       0       0       0
   389 ;;      Totals:         0       9       0       0       0
   390 ;;Total ram usage:        9 bytes
   391 ;; Hardware stack levels required when called: 2
   392 ;; This function calls:
   393 ;;		___lldiv
   394 ;;		___lmul
   395 ;;		_lcd_command
   396 ;;		_lcd_data
   397 ;;		_lcd_init
   398 ;;		_lcd_print_number
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404     06E8                     _main:	
   405                           ;psect for function _main
   406                           
   407     06E8                     l885:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   410                           
   411                           
   412                           ;main.c: 74:         adc_low = ADRESL;;main.c: 76:         _delay((unsigned long)((10)*(
      +                          6000000/4000.0)));
   413     06E8  120A  118A  2524  120A  118A  	fcall	_lcd_init
   414     06ED                     l887:
   415                           
   416                           ;main.c: 77: 
   417     06ED  3082               	movlw	130
   418     06EE  1683               	bsf	3,5	;RP0=1, select bank1
   419     06EF  1303               	bcf	3,6	;RP1=0, select bank1
   420     06F0  009F               	movwf	31	;volatile
   421     06F1                     l889:
   422                           
   423                           ;main.c: 78: 
   424     06F1  30FF               	movlw	255
   425     06F2  0085               	movwf	5	;volatile
   426     06F3                     l891:
   427                           
   428                           ;main.c: 82:         while (ADCON0 & 0x04);
   429     06F3  3081               	movlw	129
   430     06F4  1283               	bcf	3,5	;RP0=0, select bank0
   431     06F5  1303               	bcf	3,6	;RP1=0, select bank0
   432     06F6  009F               	movwf	31	;volatile
   433     06F7                     l893:
   434                           
   435                           ;main.c: 83:         adc_high = ADRESH;
   436     06F7  3004               	movlw	4
   437     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   438     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   439     06FA  00AE               	movwf	??_main+1
   440     06FB  30E3               	movlw	227
   441     06FC  00AD               	movwf	??_main
   442     06FD                     u557:
   443     06FD  0BAD               	decfsz	??_main,f
   444     06FE  2EFD               	goto	u557
   445     06FF  0BAE               	decfsz	??_main+1,f
   446     0700  2EFD               	goto	u557
   447     0701  2F02               	nop2
   448     0702                     l895:
   449                           
   450                           ;main.c: 84:         adc_low = ADRESL;
   451     0702  1283               	bcf	3,5	;RP0=0, select bank0
   452     0703  1303               	bcf	3,6	;RP1=0, select bank0
   453     0704  151F               	bsf	31,2	;volatile
   454     0705                     l49:	
   455                           ;main.c: 85:         adc_val4 = (adc_high << 8) | adc_low;
   456                           
   457     0705  191F               	btfsc	31,2	;volatile
   458     0706  2F08               	goto	u531
   459     0707  2F09               	goto	u530
   460     0708                     u531:
   461     0708  2F05               	goto	l49
   462     0709                     u530:
   463     0709                     l897:
   464                           
   465                           ;main.c: 86: 
   466     0709  081E               	movf	30,w	;volatile
   467     070A  00AD               	movwf	??_main
   468     070B  01AE               	clrf	??_main+1
   469     070C  082D               	movf	??_main,w
   470     070D  00BA               	movwf	_adc_high
   471     070E  082E               	movf	??_main+1,w
   472     070F  00BB               	movwf	_adc_high+1
   473                           
   474                           ;main.c: 87:         adc_val4_1 = ((unsigned long)adc_val4 * 135) / 1023;
   475     0710  1683               	bsf	3,5	;RP0=1, select bank1
   476     0711  1303               	bcf	3,6	;RP1=0, select bank1
   477     0712  081E               	movf	30,w	;volatile
   478     0713  1283               	bcf	3,5	;RP0=0, select bank0
   479     0714  1303               	bcf	3,6	;RP1=0, select bank0
   480     0715  00AD               	movwf	??_main
   481     0716  01AE               	clrf	??_main+1
   482     0717  082D               	movf	??_main,w
   483     0718  00B8               	movwf	_adc_low
   484     0719  082E               	movf	??_main+1,w
   485     071A  00B9               	movwf	_adc_low+1
   486                           
   487                           ;main.c: 88: 
   488     071B  083A               	movf	_adc_high,w
   489     071C  00AE               	movwf	??_main+1
   490     071D  01AD               	clrf	??_main
   491     071E  0838               	movf	_adc_low,w
   492     071F  042D               	iorwf	??_main,w
   493     0720  00B0               	movwf	main@adc_val0
   494     0721  0839               	movf	_adc_low+1,w
   495     0722  042E               	iorwf	??_main+1,w
   496     0723  00B1               	movwf	main@adc_val0+1
   497                           
   498                           ;main.c: 89: 
   499     0724  3014               	movlw	20
   500     0725  1283               	bcf	3,5	;RP0=0, select bank0
   501     0726  1303               	bcf	3,6	;RP1=0, select bank0
   502     0727  00AE               	movwf	??_main+1
   503     0728  3079               	movlw	121
   504     0729  00AD               	movwf	??_main
   505     072A                     u567:
   506     072A  0BAD               	decfsz	??_main,f
   507     072B  2F2A               	goto	u567
   508     072C  0BAE               	decfsz	??_main+1,f
   509     072D  2F2A               	goto	u567
   510     072E                     l899:
   511                           
   512                           ;main.c: 92:         lcd_data('C'); lcd_data('H'); lcd_data('1'); lcd_data(':');
   513     072E  30A1               	movlw	161
   514     072F  1283               	bcf	3,5	;RP0=0, select bank0
   515     0730  1303               	bcf	3,6	;RP1=0, select bank0
   516     0731  009F               	movwf	31	;volatile
   517                           
   518                           ;main.c: 93:         lcd_print_number(adc_val0);
   519     0732  3004               	movlw	4
   520     0733  1283               	bcf	3,5	;RP0=0, select bank0
   521     0734  1303               	bcf	3,6	;RP1=0, select bank0
   522     0735  00AE               	movwf	??_main+1
   523     0736  30E3               	movlw	227
   524     0737  00AD               	movwf	??_main
   525     0738                     u577:
   526     0738  0BAD               	decfsz	??_main,f
   527     0739  2F38               	goto	u577
   528     073A  0BAE               	decfsz	??_main+1,f
   529     073B  2F38               	goto	u577
   530     073C  2F3D               	nop2
   531     073D                     l901:
   532                           
   533                           ;main.c: 94: 
   534     073D  1283               	bcf	3,5	;RP0=0, select bank0
   535     073E  1303               	bcf	3,6	;RP1=0, select bank0
   536     073F  151F               	bsf	31,2	;volatile
   537     0740                     l52:	
   538                           ;main.c: 95: 
   539                           
   540     0740  191F               	btfsc	31,2	;volatile
   541     0741  2F43               	goto	u541
   542     0742  2F44               	goto	u540
   543     0743                     u541:
   544     0743  2F40               	goto	l52
   545     0744                     u540:
   546     0744                     l903:
   547                           
   548                           ;main.c: 96:         lcd_command(0xC0);
   549     0744  081E               	movf	30,w	;volatile
   550     0745  00AD               	movwf	??_main
   551     0746  01AE               	clrf	??_main+1
   552     0747  082D               	movf	??_main,w
   553     0748  00BA               	movwf	_adc_high
   554     0749  082E               	movf	??_main+1,w
   555     074A  00BB               	movwf	_adc_high+1
   556                           
   557                           ;main.c: 97:         lcd_data('C'); lcd_data('H'); lcd_data('2'); lcd_data(':');
   558     074B  1683               	bsf	3,5	;RP0=1, select bank1
   559     074C  1303               	bcf	3,6	;RP1=0, select bank1
   560     074D  081E               	movf	30,w	;volatile
   561     074E  1283               	bcf	3,5	;RP0=0, select bank0
   562     074F  1303               	bcf	3,6	;RP1=0, select bank0
   563     0750  00AD               	movwf	??_main
   564     0751  01AE               	clrf	??_main+1
   565     0752  082D               	movf	??_main,w
   566     0753  00B8               	movwf	_adc_low
   567     0754  082E               	movf	??_main+1,w
   568     0755  00B9               	movwf	_adc_low+1
   569                           
   570                           ;main.c: 98:         lcd_print_number(adc_val4_1);
   571     0756  083A               	movf	_adc_high,w
   572     0757  00AE               	movwf	??_main+1
   573     0758  01AD               	clrf	??_main
   574     0759  0838               	movf	_adc_low,w
   575     075A  042D               	iorwf	??_main,w
   576     075B  00B2               	movwf	main@adc_val4
   577     075C  0839               	movf	_adc_low+1,w
   578     075D  042E               	iorwf	??_main+1,w
   579     075E  00B3               	movwf	main@adc_val4+1
   580     075F                     l905:
   581                           
   582                           ;main.c: 100:         _delay((unsigned long)((200)*(6000000/4000.0)));
   583     075F  3000               	movlw	0
   584     0760  00A3               	movwf	___lldiv@divisor+3
   585     0761  3000               	movlw	0
   586     0762  00A2               	movwf	___lldiv@divisor+2
   587     0763  3003               	movlw	3
   588     0764  00A1               	movwf	___lldiv@divisor+1
   589     0765  30FF               	movlw	255
   590     0766  00A0               	movwf	___lldiv@divisor
   591     0767  0832               	movf	main@adc_val4,w
   592     0768  00F0               	movwf	___lmul@multiplier
   593     0769  0833               	movf	main@adc_val4+1,w
   594     076A  00F1               	movwf	___lmul@multiplier+1
   595     076B  01F2               	clrf	___lmul@multiplier+2
   596     076C  01F3               	clrf	___lmul@multiplier+3
   597     076D  3000               	movlw	0
   598     076E  00F7               	movwf	___lmul@multiplicand+3
   599     076F  3000               	movlw	0
   600     0770  00F6               	movwf	___lmul@multiplicand+2
   601     0771  3000               	movlw	0
   602     0772  00F5               	movwf	___lmul@multiplicand+1
   603     0773  3087               	movlw	135
   604     0774  00F4               	movwf	___lmul@multiplicand
   605     0775  120A  118A  25C4  120A  118A  	fcall	___lmul
   606     077A  0873               	movf	?___lmul+3,w
   607     077B  1283               	bcf	3,5	;RP0=0, select bank0
   608     077C  1303               	bcf	3,6	;RP1=0, select bank0
   609     077D  00A7               	movwf	___lldiv@dividend+3
   610     077E  0872               	movf	?___lmul+2,w
   611     077F  00A6               	movwf	___lldiv@dividend+2
   612     0780  0871               	movf	?___lmul+1,w
   613     0781  00A5               	movwf	___lldiv@dividend+1
   614     0782  0870               	movf	?___lmul,w
   615     0783  00A4               	movwf	___lldiv@dividend
   616     0784  120A  118A  260A  120A  118A  	fcall	___lldiv
   617     0789  1283               	bcf	3,5	;RP0=0, select bank0
   618     078A  1303               	bcf	3,6	;RP1=0, select bank0
   619     078B  0821               	movf	?___lldiv+1,w
   620     078C  00B5               	movwf	main@adc_val4_1+1
   621     078D  0820               	movf	?___lldiv,w
   622     078E  00B4               	movwf	main@adc_val4_1
   623     078F                     l907:
   624     078F  3080               	movlw	128
   625     0790  120A  118A  24EE  120A  118A  	fcall	_lcd_command
   626     0795                     l909:
   627     0795  3043               	movlw	67
   628     0796  120A  118A  2509  120A  118A  	fcall	_lcd_data
   629     079B                     l911:
   630     079B  3048               	movlw	72
   631     079C  120A  118A  2509  120A  118A  	fcall	_lcd_data
   632     07A1                     l913:
   633     07A1  3031               	movlw	49
   634     07A2  120A  118A  2509  120A  118A  	fcall	_lcd_data
   635     07A7                     l915:
   636     07A7  303A               	movlw	58
   637     07A8  120A  118A  2509  120A  118A  	fcall	_lcd_data
   638     07AD                     l917:
   639     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   640     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   641     07AF  0831               	movf	main@adc_val0+1,w
   642     07B0  00FD               	movwf	lcd_print_number@val+1
   643     07B1  0830               	movf	main@adc_val0,w
   644     07B2  00FC               	movwf	lcd_print_number@val
   645     07B3  120A  118A  2670  120A  118A  	fcall	_lcd_print_number
   646     07B8                     l919:
   647     07B8  30C0               	movlw	192
   648     07B9  120A  118A  24EE  120A  118A  	fcall	_lcd_command
   649     07BE                     l921:
   650     07BE  3043               	movlw	67
   651     07BF  120A  118A  2509  120A  118A  	fcall	_lcd_data
   652     07C4                     l923:
   653     07C4  3048               	movlw	72
   654     07C5  120A  118A  2509  120A  118A  	fcall	_lcd_data
   655     07CA                     l925:
   656     07CA  3032               	movlw	50
   657     07CB  120A  118A  2509  120A  118A  	fcall	_lcd_data
   658     07D0                     l927:
   659     07D0  303A               	movlw	58
   660     07D1  120A  118A  2509  120A  118A  	fcall	_lcd_data
   661     07D6                     l929:
   662     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   663     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   664     07D8  0835               	movf	main@adc_val4_1+1,w
   665     07D9  00FD               	movwf	lcd_print_number@val+1
   666     07DA  0834               	movf	main@adc_val4_1,w
   667     07DB  00FC               	movwf	lcd_print_number@val
   668     07DC  120A  118A  2670  120A  118A  	fcall	_lcd_print_number
   669     07E1                     l931:
   670     07E1  3002               	movlw	2
   671     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   672     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   673     07E4  00AF               	movwf	??_main+2
   674     07E5  3086               	movlw	134
   675     07E6  00AE               	movwf	??_main+1
   676     07E7  3098               	movlw	152
   677     07E8  00AD               	movwf	??_main
   678     07E9                     u587:
   679     07E9  0BAD               	decfsz	??_main,f
   680     07EA  2FE9               	goto	u587
   681     07EB  0BAE               	decfsz	??_main+1,f
   682     07EC  2FE9               	goto	u587
   683     07ED  0BAF               	decfsz	??_main+2,f
   684     07EE  2FE9               	goto	u587
   685     07EF  0000               	nop
   686     07F0  2EF3               	goto	l891
   687     07F1  120A  118A  2800   	ljmp	start
   688     07F4                     __end_of_main:
   689                           
   690                           	psect	text1
   691     0670                     __ptext1:	
   692 ;; *************** function _lcd_print_number *****************
   693 ;; Defined at:
   694 ;;		line 66 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  val             2   12[COMMON] unsigned int 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         2       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0
   711 ;;      Totals:         2       0       0       0       0
   712 ;;Total ram usage:        2 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 1
   715 ;; This function calls:
   716 ;;		___lwdiv
   717 ;;		___lwmod
   718 ;;		_lcd_data
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724     0670                     _lcd_print_number:	
   725                           ;psect for function _lcd_print_number
   726                           
   727     0670                     l843:	
   728                           ;incstack = 0
   729                           ; Regs used in _lcd_print_number: [wreg+status,2+status,0+pclath+cstack]
   730                           
   731                           
   732                           ;main.c: 67:     while(1) {
   733     0670  300A               	movlw	10
   734     0671  00F7               	movwf	___lwmod@divisor
   735     0672  3000               	movlw	0
   736     0673  00F8               	movwf	___lwmod@divisor+1
   737     0674  30E8               	movlw	232
   738     0675  00F0               	movwf	___lwdiv@divisor
   739     0676  3003               	movlw	3
   740     0677  00F1               	movwf	___lwdiv@divisor+1
   741     0678  087D               	movf	lcd_print_number@val+1,w
   742     0679  00F3               	movwf	___lwdiv@dividend+1
   743     067A  087C               	movf	lcd_print_number@val,w
   744     067B  00F2               	movwf	___lwdiv@dividend
   745     067C  120A  118A  2582  120A  118A  	fcall	___lwdiv
   746     0681  0871               	movf	?___lwdiv+1,w
   747     0682  00FA               	movwf	___lwmod@dividend+1
   748     0683  0870               	movf	?___lwdiv,w
   749     0684  00F9               	movwf	___lwmod@dividend
   750     0685  120A  118A  254A  120A  118A  	fcall	___lwmod
   751     068A  0877               	movf	?___lwmod,w
   752     068B  3E30               	addlw	48
   753     068C  120A  118A  2509  120A  118A  	fcall	_lcd_data
   754                           
   755                           ;main.c: 68: 
   756     0691  300A               	movlw	10
   757     0692  00F7               	movwf	___lwmod@divisor
   758     0693  3000               	movlw	0
   759     0694  00F8               	movwf	___lwmod@divisor+1
   760     0695  3064               	movlw	100
   761     0696  00F0               	movwf	___lwdiv@divisor
   762     0697  3000               	movlw	0
   763     0698  00F1               	movwf	___lwdiv@divisor+1
   764     0699  087D               	movf	lcd_print_number@val+1,w
   765     069A  00F3               	movwf	___lwdiv@dividend+1
   766     069B  087C               	movf	lcd_print_number@val,w
   767     069C  00F2               	movwf	___lwdiv@dividend
   768     069D  120A  118A  2582  120A  118A  	fcall	___lwdiv
   769     06A2  0871               	movf	?___lwdiv+1,w
   770     06A3  00FA               	movwf	___lwmod@dividend+1
   771     06A4  0870               	movf	?___lwdiv,w
   772     06A5  00F9               	movwf	___lwmod@dividend
   773     06A6  120A  118A  254A  120A  118A  	fcall	___lwmod
   774     06AB  0877               	movf	?___lwmod,w
   775     06AC  3E30               	addlw	48
   776     06AD  120A  118A  2509  120A  118A  	fcall	_lcd_data
   777                           
   778                           ;main.c: 69:         ADCON0 = 0x81;
   779     06B2  300A               	movlw	10
   780     06B3  00F7               	movwf	___lwmod@divisor
   781     06B4  3000               	movlw	0
   782     06B5  00F8               	movwf	___lwmod@divisor+1
   783     06B6  300A               	movlw	10
   784     06B7  00F0               	movwf	___lwdiv@divisor
   785     06B8  3000               	movlw	0
   786     06B9  00F1               	movwf	___lwdiv@divisor+1
   787     06BA  087D               	movf	lcd_print_number@val+1,w
   788     06BB  00F3               	movwf	___lwdiv@dividend+1
   789     06BC  087C               	movf	lcd_print_number@val,w
   790     06BD  00F2               	movwf	___lwdiv@dividend
   791     06BE  120A  118A  2582  120A  118A  	fcall	___lwdiv
   792     06C3  0871               	movf	?___lwdiv+1,w
   793     06C4  00FA               	movwf	___lwmod@dividend+1
   794     06C5  0870               	movf	?___lwdiv,w
   795     06C6  00F9               	movwf	___lwmod@dividend
   796     06C7  120A  118A  254A  120A  118A  	fcall	___lwmod
   797     06CC  0877               	movf	?___lwmod,w
   798     06CD  3E30               	addlw	48
   799     06CE  120A  118A  2509  120A  118A  	fcall	_lcd_data
   800                           
   801                           ;main.c: 70:         _delay((unsigned long)((2)*(6000000/4000.0)));
   802     06D3  300A               	movlw	10
   803     06D4  00F7               	movwf	___lwmod@divisor
   804     06D5  3000               	movlw	0
   805     06D6  00F8               	movwf	___lwmod@divisor+1
   806     06D7  087D               	movf	lcd_print_number@val+1,w
   807     06D8  00FA               	movwf	___lwmod@dividend+1
   808     06D9  087C               	movf	lcd_print_number@val,w
   809     06DA  00F9               	movwf	___lwmod@dividend
   810     06DB  120A  118A  254A  120A  118A  	fcall	___lwmod
   811     06E0  0877               	movf	?___lwmod,w
   812     06E1  3E30               	addlw	48
   813     06E2  120A  118A  2509  120A  118A  	fcall	_lcd_data
   814     06E7                     l43:
   815     06E7  0008               	return
   816     06E8                     __end_of_lcd_print_number:
   817                           
   818                           	psect	text2
   819     0509                     __ptext2:	
   820 ;; *************** function _lcd_data *****************
   821 ;; Defined at:
   822 ;;		line 40 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  data            1    wreg     unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  data            1    2[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          2       0       0       0       0
   839 ;;      Totals:         3       0       0       0       0
   840 ;;Total ram usage:        3 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_lcd_print_number
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850     0509                     _lcd_data:	
   851                           ;psect for function _lcd_data
   852                           
   853                           
   854                           ;incstack = 0
   855                           ; Regs used in _lcd_data: [wreg]
   856                           ;lcd_data@data stored from wreg
   857     0509  00F2               	movwf	lcd_data@data
   858     050A                     l775:
   859                           
   860                           ;main.c: 41:     lcd_command(0x0C);
   861     050A  1283               	bcf	3,5	;RP0=0, select bank0
   862     050B  1303               	bcf	3,6	;RP1=0, select bank0
   863     050C  1587               	bsf	7,3	;volatile
   864     050D                     l777:
   865                           
   866                           ;main.c: 42:     lcd_command(0x06);
   867     050D  0872               	movf	lcd_data@data,w
   868     050E  0088               	movwf	8	;volatile
   869     050F                     l779:
   870                           
   871                           ;main.c: 43:     lcd_command(0x01);
   872     050F  1407               	bsf	7,0	;volatile
   873                           
   874                           ;main.c: 44:     _delay((unsigned long)((5)*(6000000/4000.0)));
   875     0510  30D6               	movlw	214
   876     0511  00F0               	movwf	??_lcd_data
   877     0512                     u597:
   878     0512  2D13               	nop2
   879     0513  2D14               	nop2
   880     0514  0BF0               	decfsz	??_lcd_data,f
   881     0515  2D12               	goto	u597
   882     0516  0000               	nop
   883     0517                     l781:
   884                           
   885                           ;main.c: 45: }
   886     0517  1283               	bcf	3,5	;RP0=0, select bank0
   887     0518  1303               	bcf	3,6	;RP1=0, select bank0
   888     0519  1007               	bcf	7,0	;volatile
   889                           
   890                           ;main.c: 46: 
   891     051A  3004               	movlw	4
   892     051B  00F1               	movwf	??_lcd_data+1
   893     051C  30E4               	movlw	228
   894     051D  00F0               	movwf	??_lcd_data
   895     051E                     u607:
   896     051E  0BF0               	decfsz	??_lcd_data,f
   897     051F  2D1E               	goto	u607
   898     0520  0BF1               	decfsz	??_lcd_data+1,f
   899     0521  2D1E               	goto	u607
   900     0522  0000               	nop
   901     0523                     l34:
   902     0523  0008               	return
   903     0524                     __end_of_lcd_data:
   904                           
   905                           	psect	text3
   906     054A                     __ptext3:	
   907 ;; *************** function ___lwmod *****************
   908 ;; Defined at:
   909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  divisor         2    7[COMMON] unsigned int 
   912 ;;  dividend        2    9[COMMON] unsigned int 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  counter         1   11[COMMON] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  2    7[COMMON] unsigned int 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         4       0       0       0       0
   925 ;;      Locals:         1       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0
   927 ;;      Totals:         5       0       0       0       0
   928 ;;Total ram usage:        5 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_lcd_print_number
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937     054A                     ___lwmod:	
   938                           ;psect for function ___lwmod
   939                           
   940     054A                     l809:	
   941                           ;incstack = 0
   942                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   943                           
   944     054A  0877               	movf	___lwmod@divisor,w
   945     054B  0478               	iorwf	___lwmod@divisor+1,w
   946     054C  1903               	btfsc	3,2
   947     054D  2D4F               	goto	u351
   948     054E  2D50               	goto	u350
   949     054F                     u351:
   950     054F  2D7D               	goto	l827
   951     0550                     u350:
   952     0550                     l811:
   953     0550  3001               	movlw	1
   954     0551  00FB               	movwf	___lwmod@counter
   955     0552  2D5C               	goto	l817
   956     0553                     l813:
   957     0553  3001               	movlw	1
   958     0554                     u365:
   959     0554  1003               	clrc
   960     0555  0DF7               	rlf	___lwmod@divisor,f
   961     0556  0DF8               	rlf	___lwmod@divisor+1,f
   962     0557  3EFF               	addlw	-1
   963     0558  1D03               	skipz
   964     0559  2D54               	goto	u365
   965     055A                     l815:
   966     055A  3001               	movlw	1
   967     055B  07FB               	addwf	___lwmod@counter,f
   968     055C                     l817:
   969     055C  1FF8               	btfss	___lwmod@divisor+1,7
   970     055D  2D5F               	goto	u371
   971     055E  2D60               	goto	u370
   972     055F                     u371:
   973     055F  2D53               	goto	l813
   974     0560                     u370:
   975     0560                     l819:
   976     0560  0878               	movf	___lwmod@divisor+1,w
   977     0561  027A               	subwf	___lwmod@dividend+1,w
   978     0562  1D03               	skipz
   979     0563  2D66               	goto	u385
   980     0564  0877               	movf	___lwmod@divisor,w
   981     0565  0279               	subwf	___lwmod@dividend,w
   982     0566                     u385:
   983     0566  1C03               	skipc
   984     0567  2D69               	goto	u381
   985     0568  2D6A               	goto	u380
   986     0569                     u381:
   987     0569  2D70               	goto	l823
   988     056A                     u380:
   989     056A                     l821:
   990     056A  0877               	movf	___lwmod@divisor,w
   991     056B  02F9               	subwf	___lwmod@dividend,f
   992     056C  0878               	movf	___lwmod@divisor+1,w
   993     056D  1C03               	skipc
   994     056E  03FA               	decf	___lwmod@dividend+1,f
   995     056F  02FA               	subwf	___lwmod@dividend+1,f
   996     0570                     l823:
   997     0570  3001               	movlw	1
   998     0571                     u395:
   999     0571  1003               	clrc
  1000     0572  0CF8               	rrf	___lwmod@divisor+1,f
  1001     0573  0CF7               	rrf	___lwmod@divisor,f
  1002     0574  3EFF               	addlw	-1
  1003     0575  1D03               	skipz
  1004     0576  2D71               	goto	u395
  1005     0577                     l825:
  1006     0577  3001               	movlw	1
  1007     0578  02FB               	subwf	___lwmod@counter,f
  1008     0579  1D03               	btfss	3,2
  1009     057A  2D7C               	goto	u401
  1010     057B  2D7D               	goto	u400
  1011     057C                     u401:
  1012     057C  2D60               	goto	l819
  1013     057D                     u400:
  1014     057D                     l827:
  1015     057D  087A               	movf	___lwmod@dividend+1,w
  1016     057E  00F8               	movwf	?___lwmod+1
  1017     057F  0879               	movf	___lwmod@dividend,w
  1018     0580  00F7               	movwf	?___lwmod
  1019     0581                     l433:
  1020     0581  0008               	return
  1021     0582                     __end_of___lwmod:
  1022                           
  1023                           	psect	text4
  1024     0582                     __ptext4:	
  1025 ;; *************** function ___lwdiv *****************
  1026 ;; Defined at:
  1027 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  divisor         2    0[COMMON] unsigned int 
  1030 ;;  dividend        2    2[COMMON] unsigned int 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  quotient        2    4[COMMON] unsigned int 
  1033 ;;  counter         1    6[COMMON] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2    0[COMMON] unsigned int 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         4       0       0       0       0
  1044 ;;      Locals:         3       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0
  1046 ;;      Totals:         7       0       0       0       0
  1047 ;;Total ram usage:        7 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_lcd_print_number
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056     0582                     ___lwdiv:	
  1057                           ;psect for function ___lwdiv
  1058                           
  1059     0582                     l783:	
  1060                           ;incstack = 0
  1061                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1062                           
  1063     0582  01F4               	clrf	___lwdiv@quotient
  1064     0583  01F5               	clrf	___lwdiv@quotient+1
  1065     0584                     l785:
  1066     0584  0870               	movf	___lwdiv@divisor,w
  1067     0585  0471               	iorwf	___lwdiv@divisor+1,w
  1068     0586  1903               	btfsc	3,2
  1069     0587  2D89               	goto	u281
  1070     0588  2D8A               	goto	u280
  1071     0589                     u281:
  1072     0589  2DBF               	goto	l805
  1073     058A                     u280:
  1074     058A                     l787:
  1075     058A  3001               	movlw	1
  1076     058B  00F6               	movwf	___lwdiv@counter
  1077     058C  2D96               	goto	l793
  1078     058D                     l789:
  1079     058D  3001               	movlw	1
  1080     058E                     u295:
  1081     058E  1003               	clrc
  1082     058F  0DF0               	rlf	___lwdiv@divisor,f
  1083     0590  0DF1               	rlf	___lwdiv@divisor+1,f
  1084     0591  3EFF               	addlw	-1
  1085     0592  1D03               	skipz
  1086     0593  2D8E               	goto	u295
  1087     0594                     l791:
  1088     0594  3001               	movlw	1
  1089     0595  07F6               	addwf	___lwdiv@counter,f
  1090     0596                     l793:
  1091     0596  1FF1               	btfss	___lwdiv@divisor+1,7
  1092     0597  2D99               	goto	u301
  1093     0598  2D9A               	goto	u300
  1094     0599                     u301:
  1095     0599  2D8D               	goto	l789
  1096     059A                     u300:
  1097     059A                     l795:
  1098     059A  3001               	movlw	1
  1099     059B                     u315:
  1100     059B  1003               	clrc
  1101     059C  0DF4               	rlf	___lwdiv@quotient,f
  1102     059D  0DF5               	rlf	___lwdiv@quotient+1,f
  1103     059E  3EFF               	addlw	-1
  1104     059F  1D03               	skipz
  1105     05A0  2D9B               	goto	u315
  1106     05A1  0871               	movf	___lwdiv@divisor+1,w
  1107     05A2  0273               	subwf	___lwdiv@dividend+1,w
  1108     05A3  1D03               	skipz
  1109     05A4  2DA7               	goto	u325
  1110     05A5  0870               	movf	___lwdiv@divisor,w
  1111     05A6  0272               	subwf	___lwdiv@dividend,w
  1112     05A7                     u325:
  1113     05A7  1C03               	skipc
  1114     05A8  2DAA               	goto	u321
  1115     05A9  2DAB               	goto	u320
  1116     05AA                     u321:
  1117     05AA  2DB2               	goto	l801
  1118     05AB                     u320:
  1119     05AB                     l797:
  1120     05AB  0870               	movf	___lwdiv@divisor,w
  1121     05AC  02F2               	subwf	___lwdiv@dividend,f
  1122     05AD  0871               	movf	___lwdiv@divisor+1,w
  1123     05AE  1C03               	skipc
  1124     05AF  03F3               	decf	___lwdiv@dividend+1,f
  1125     05B0  02F3               	subwf	___lwdiv@dividend+1,f
  1126     05B1                     l799:
  1127     05B1  1474               	bsf	___lwdiv@quotient,0
  1128     05B2                     l801:
  1129     05B2  3001               	movlw	1
  1130     05B3                     u335:
  1131     05B3  1003               	clrc
  1132     05B4  0CF1               	rrf	___lwdiv@divisor+1,f
  1133     05B5  0CF0               	rrf	___lwdiv@divisor,f
  1134     05B6  3EFF               	addlw	-1
  1135     05B7  1D03               	skipz
  1136     05B8  2DB3               	goto	u335
  1137     05B9                     l803:
  1138     05B9  3001               	movlw	1
  1139     05BA  02F6               	subwf	___lwdiv@counter,f
  1140     05BB  1D03               	btfss	3,2
  1141     05BC  2DBE               	goto	u341
  1142     05BD  2DBF               	goto	u340
  1143     05BE                     u341:
  1144     05BE  2D9A               	goto	l795
  1145     05BF                     u340:
  1146     05BF                     l805:
  1147     05BF  0875               	movf	___lwdiv@quotient+1,w
  1148     05C0  00F1               	movwf	?___lwdiv+1
  1149     05C1  0874               	movf	___lwdiv@quotient,w
  1150     05C2  00F0               	movwf	?___lwdiv
  1151     05C3                     l423:
  1152     05C3  0008               	return
  1153     05C4                     __end_of___lwdiv:
  1154                           
  1155                           	psect	text5
  1156     0524                     __ptext5:	
  1157 ;; *************** function _lcd_init *****************
  1158 ;; Defined at:
  1159 ;;		line 50 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          2       0       0       0       0
  1176 ;;      Totals:         2       0       0       0       0
  1177 ;;Total ram usage:        2 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 1
  1180 ;; This function calls:
  1181 ;;		_lcd_command
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     0524                     _lcd_init:	
  1188                           ;psect for function _lcd_init
  1189                           
  1190     0524                     l831:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1193                           
  1194                           
  1195                           ;main.c: 51: 
  1196     0524  1683               	bsf	3,5	;RP0=1, select bank1
  1197     0525  1303               	bcf	3,6	;RP1=0, select bank1
  1198     0526  0187               	clrf	7	;volatile
  1199                           
  1200                           ;main.c: 52: 
  1201     0527  0188               	clrf	8	;volatile
  1202     0528                     l833:
  1203                           
  1204                           ;main.c: 53: void lcd_print_number(unsigned int val) {
  1205     0528  3038               	movlw	56
  1206     0529  120A  118A  24EE  120A  118A  	fcall	_lcd_command
  1207     052E                     l835:
  1208                           
  1209                           ;main.c: 54:     lcd_data('0' + (val / 1000) % 10);
  1210     052E  300C               	movlw	12
  1211     052F  120A  118A  24EE  120A  118A  	fcall	_lcd_command
  1212     0534                     l837:
  1213                           
  1214                           ;main.c: 55:     lcd_data('0' + (val / 100) % 10);
  1215     0534  3006               	movlw	6
  1216     0535  120A  118A  24EE  120A  118A  	fcall	_lcd_command
  1217     053A                     l839:
  1218                           
  1219                           ;main.c: 56:     lcd_data('0' + (val / 10) % 10);
  1220     053A  3001               	movlw	1
  1221     053B  120A  118A  24EE  120A  118A  	fcall	_lcd_command
  1222     0540                     l841:
  1223                           
  1224                           ;main.c: 57:     lcd_data('0' + (val % 10));
  1225     0540  300A               	movlw	10
  1226     0541  00F4               	movwf	??_lcd_init+1
  1227     0542  30BC               	movlw	188
  1228     0543  00F3               	movwf	??_lcd_init
  1229     0544                     u617:
  1230     0544  0BF3               	decfsz	??_lcd_init,f
  1231     0545  2D44               	goto	u617
  1232     0546  0BF4               	decfsz	??_lcd_init+1,f
  1233     0547  2D44               	goto	u617
  1234     0548  0000               	nop
  1235     0549                     l37:
  1236     0549  0008               	return
  1237     054A                     __end_of_lcd_init:
  1238                           
  1239                           	psect	text6
  1240     04EE                     __ptext6:	
  1241 ;; *************** function _lcd_command *****************
  1242 ;; Defined at:
  1243 ;;		line 30 in file "main.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  cmd             1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  cmd             1    2[COMMON] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         0       0       0       0       0
  1258 ;;      Locals:         1       0       0       0       0
  1259 ;;      Temps:          2       0       0       0       0
  1260 ;;      Totals:         3       0       0       0       0
  1261 ;;Total ram usage:        3 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_lcd_init
  1267 ;;		_main
  1268 ;;		_lcd_goto
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272     04EE                     _lcd_command:	
  1273                           ;psect for function _lcd_command
  1274                           
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _lcd_command: [wreg]
  1278                           ;lcd_command@cmd stored from wreg
  1279     04EE  00F2               	movwf	lcd_command@cmd
  1280     04EF                     l767:
  1281                           
  1282                           ;main.c: 31:     _delay((unsigned long)((1)*(6000000/4000.0)));
  1283     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1284     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1285     04F1  1187               	bcf	7,3	;volatile
  1286     04F2                     l769:
  1287                           
  1288                           ;main.c: 32:     RC0 = 0;
  1289     04F2  0872               	movf	lcd_command@cmd,w
  1290     04F3  0088               	movwf	8	;volatile
  1291     04F4                     l771:
  1292                           
  1293                           ;main.c: 33:     _delay((unsigned long)((2)*(6000000/4000.0)));
  1294     04F4  1407               	bsf	7,0	;volatile
  1295                           
  1296                           ;main.c: 34: }
  1297     04F5  30D6               	movlw	214
  1298     04F6  00F0               	movwf	??_lcd_command
  1299     04F7                     u627:
  1300     04F7  2CF8               	nop2
  1301     04F8  2CF9               	nop2
  1302     04F9  0BF0               	decfsz	??_lcd_command,f
  1303     04FA  2CF7               	goto	u627
  1304     04FB  0000               	nop
  1305     04FC                     l773:
  1306                           
  1307                           ;main.c: 35: 
  1308     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1309     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1310     04FE  1007               	bcf	7,0	;volatile
  1311                           
  1312                           ;main.c: 36: 
  1313     04FF  3004               	movlw	4
  1314     0500  00F1               	movwf	??_lcd_command+1
  1315     0501  30E4               	movlw	228
  1316     0502  00F0               	movwf	??_lcd_command
  1317     0503                     u637:
  1318     0503  0BF0               	decfsz	??_lcd_command,f
  1319     0504  2D03               	goto	u637
  1320     0505  0BF1               	decfsz	??_lcd_command+1,f
  1321     0506  2D03               	goto	u637
  1322     0507  0000               	nop
  1323     0508                     l31:
  1324     0508  0008               	return
  1325     0509                     __end_of_lcd_command:
  1326                           
  1327                           	psect	text7
  1328     05C4                     __ptext7:	
  1329 ;; *************** function ___lmul *****************
  1330 ;; Defined at:
  1331 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  multiplier      4    0[COMMON] unsigned long 
  1334 ;;  multiplicand    4    4[COMMON] unsigned long 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  product         4    9[COMMON] unsigned long 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  4    0[COMMON] unsigned long 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         8       0       0       0       0
  1347 ;;      Locals:         4       0       0       0       0
  1348 ;;      Temps:          1       0       0       0       0
  1349 ;;      Totals:        13       0       0       0       0
  1350 ;;Total ram usage:       13 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359     05C4                     ___lmul:	
  1360                           ;psect for function ___lmul
  1361                           
  1362     05C4                     l845:	
  1363                           ;incstack = 0
  1364                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1365                           
  1366     05C4  3000               	movlw	0
  1367     05C5  00FC               	movwf	___lmul@product+3
  1368     05C6  3000               	movlw	0
  1369     05C7  00FB               	movwf	___lmul@product+2
  1370     05C8  3000               	movlw	0
  1371     05C9  00FA               	movwf	___lmul@product+1
  1372     05CA  3000               	movlw	0
  1373     05CB  00F9               	movwf	___lmul@product
  1374     05CC                     l847:
  1375     05CC  1C70               	btfss	___lmul@multiplier,0
  1376     05CD  2DCF               	goto	u411
  1377     05CE  2DD0               	goto	u410
  1378     05CF                     u411:
  1379     05CF  2DE7               	goto	l851
  1380     05D0                     u410:
  1381     05D0                     l849:
  1382     05D0  0874               	movf	___lmul@multiplicand,w
  1383     05D1  07F9               	addwf	___lmul@product,f
  1384     05D2  0875               	movf	___lmul@multiplicand+1,w
  1385     05D3  1103               	clrz
  1386     05D4  1803               	skipnc
  1387     05D5  3E01               	addlw	1
  1388     05D6  1903               	skipnz
  1389     05D7  2DD9               	goto	u421
  1390     05D8  07FA               	addwf	___lmul@product+1,f
  1391     05D9                     u421:
  1392     05D9  0876               	movf	___lmul@multiplicand+2,w
  1393     05DA  1103               	clrz
  1394     05DB  1803               	skipnc
  1395     05DC  3E01               	addlw	1
  1396     05DD  1903               	skipnz
  1397     05DE  2DE0               	goto	u422
  1398     05DF  07FB               	addwf	___lmul@product+2,f
  1399     05E0                     u422:
  1400     05E0  0877               	movf	___lmul@multiplicand+3,w
  1401     05E1  1103               	clrz
  1402     05E2  1803               	skipnc
  1403     05E3  3E01               	addlw	1
  1404     05E4  1903               	skipnz
  1405     05E5  2DE7               	goto	u423
  1406     05E6  07FC               	addwf	___lmul@product+3,f
  1407     05E7                     u423:
  1408     05E7                     l851:
  1409     05E7  3001               	movlw	1
  1410     05E8  00F8               	movwf	??___lmul
  1411     05E9                     u435:
  1412     05E9  1003               	clrc
  1413     05EA  0DF4               	rlf	___lmul@multiplicand,f
  1414     05EB  0DF5               	rlf	___lmul@multiplicand+1,f
  1415     05EC  0DF6               	rlf	___lmul@multiplicand+2,f
  1416     05ED  0DF7               	rlf	___lmul@multiplicand+3,f
  1417     05EE  0BF8               	decfsz	??___lmul,f
  1418     05EF  2DE9               	goto	u435
  1419     05F0                     l853:
  1420     05F0  3001               	movlw	1
  1421     05F1                     u445:
  1422     05F1  1003               	clrc
  1423     05F2  0CF3               	rrf	___lmul@multiplier+3,f
  1424     05F3  0CF2               	rrf	___lmul@multiplier+2,f
  1425     05F4  0CF1               	rrf	___lmul@multiplier+1,f
  1426     05F5  0CF0               	rrf	___lmul@multiplier,f
  1427     05F6  3EFF               	addlw	-1
  1428     05F7  1D03               	skipz
  1429     05F8  2DF1               	goto	u445
  1430     05F9  0873               	movf	___lmul@multiplier+3,w
  1431     05FA  0472               	iorwf	___lmul@multiplier+2,w
  1432     05FB  0471               	iorwf	___lmul@multiplier+1,w
  1433     05FC  0470               	iorwf	___lmul@multiplier,w
  1434     05FD  1D03               	skipz
  1435     05FE  2E00               	goto	u451
  1436     05FF  2E01               	goto	u450
  1437     0600                     u451:
  1438     0600  2DCC               	goto	l847
  1439     0601                     u450:
  1440     0601                     l855:
  1441     0601  087C               	movf	___lmul@product+3,w
  1442     0602  00F3               	movwf	?___lmul+3
  1443     0603  087B               	movf	___lmul@product+2,w
  1444     0604  00F2               	movwf	?___lmul+2
  1445     0605  087A               	movf	___lmul@product+1,w
  1446     0606  00F1               	movwf	?___lmul+1
  1447     0607  0879               	movf	___lmul@product,w
  1448     0608  00F0               	movwf	?___lmul
  1449     0609                     l157:
  1450     0609  0008               	return
  1451     060A                     __end_of___lmul:
  1452                           
  1453                           	psect	text8
  1454     060A                     __ptext8:	
  1455 ;; *************** function ___lldiv *****************
  1456 ;; Defined at:
  1457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  divisor         4    0[BANK0 ] unsigned long 
  1460 ;;  dividend        4    4[BANK0 ] unsigned long 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  quotient        4    8[BANK0 ] unsigned long 
  1463 ;;  counter         1   12[BANK0 ] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  4    0[BANK0 ] unsigned long 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       8       0       0       0
  1474 ;;      Locals:         0       5       0       0       0
  1475 ;;      Temps:          1       0       0       0       0
  1476 ;;      Totals:         1      13       0       0       0
  1477 ;;Total ram usage:       14 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486     060A                     ___lldiv:	
  1487                           ;psect for function ___lldiv
  1488                           
  1489     060A                     l859:	
  1490                           ;incstack = 0
  1491                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1492                           
  1493     060A  3000               	movlw	0
  1494     060B  1283               	bcf	3,5	;RP0=0, select bank0
  1495     060C  1303               	bcf	3,6	;RP1=0, select bank0
  1496     060D  00AB               	movwf	___lldiv@quotient+3
  1497     060E  3000               	movlw	0
  1498     060F  00AA               	movwf	___lldiv@quotient+2
  1499     0610  3000               	movlw	0
  1500     0611  00A9               	movwf	___lldiv@quotient+1
  1501     0612  3000               	movlw	0
  1502     0613  00A8               	movwf	___lldiv@quotient
  1503     0614  0823               	movf	___lldiv@divisor+3,w
  1504     0615  0422               	iorwf	___lldiv@divisor+2,w
  1505     0616  0421               	iorwf	___lldiv@divisor+1,w
  1506     0617  0420               	iorwf	___lldiv@divisor,w
  1507     0618  1903               	skipnz
  1508     0619  2E1B               	goto	u461
  1509     061A  2E1C               	goto	u460
  1510     061B                     u461:
  1511     061B  2E67               	goto	l879
  1512     061C                     u460:
  1513     061C                     l861:
  1514     061C  3001               	movlw	1
  1515     061D  00AC               	movwf	___lldiv@counter
  1516     061E  2E2A               	goto	l865
  1517     061F                     l863:
  1518     061F  3001               	movlw	1
  1519     0620  00FD               	movwf	??___lldiv
  1520     0621                     u475:
  1521     0621  1003               	clrc
  1522     0622  0DA0               	rlf	___lldiv@divisor,f
  1523     0623  0DA1               	rlf	___lldiv@divisor+1,f
  1524     0624  0DA2               	rlf	___lldiv@divisor+2,f
  1525     0625  0DA3               	rlf	___lldiv@divisor+3,f
  1526     0626  0BFD               	decfsz	??___lldiv,f
  1527     0627  2E21               	goto	u475
  1528     0628  3001               	movlw	1
  1529     0629  07AC               	addwf	___lldiv@counter,f
  1530     062A                     l865:
  1531     062A  1FA3               	btfss	___lldiv@divisor+3,7
  1532     062B  2E2D               	goto	u481
  1533     062C  2E2E               	goto	u480
  1534     062D                     u481:
  1535     062D  2E1F               	goto	l863
  1536     062E                     u480:
  1537     062E                     l867:
  1538     062E  3001               	movlw	1
  1539     062F  00FD               	movwf	??___lldiv
  1540     0630                     u495:
  1541     0630  1003               	clrc
  1542     0631  0DA8               	rlf	___lldiv@quotient,f
  1543     0632  0DA9               	rlf	___lldiv@quotient+1,f
  1544     0633  0DAA               	rlf	___lldiv@quotient+2,f
  1545     0634  0DAB               	rlf	___lldiv@quotient+3,f
  1546     0635  0BFD               	decfsz	??___lldiv,f
  1547     0636  2E30               	goto	u495
  1548     0637                     l869:
  1549     0637  0823               	movf	___lldiv@divisor+3,w
  1550     0638  0227               	subwf	___lldiv@dividend+3,w
  1551     0639  1D03               	skipz
  1552     063A  2E45               	goto	u505
  1553     063B  0822               	movf	___lldiv@divisor+2,w
  1554     063C  0226               	subwf	___lldiv@dividend+2,w
  1555     063D  1D03               	skipz
  1556     063E  2E45               	goto	u505
  1557     063F  0821               	movf	___lldiv@divisor+1,w
  1558     0640  0225               	subwf	___lldiv@dividend+1,w
  1559     0641  1D03               	skipz
  1560     0642  2E45               	goto	u505
  1561     0643  0820               	movf	___lldiv@divisor,w
  1562     0644  0224               	subwf	___lldiv@dividend,w
  1563     0645                     u505:
  1564     0645  1C03               	skipc
  1565     0646  2E48               	goto	u501
  1566     0647  2E49               	goto	u500
  1567     0648                     u501:
  1568     0648  2E58               	goto	l875
  1569     0649                     u500:
  1570     0649                     l871:
  1571     0649  0820               	movf	___lldiv@divisor,w
  1572     064A  02A4               	subwf	___lldiv@dividend,f
  1573     064B  0821               	movf	___lldiv@divisor+1,w
  1574     064C  1C03               	skipc
  1575     064D  0F21               	incfsz	___lldiv@divisor+1,w
  1576     064E  02A5               	subwf	___lldiv@dividend+1,f
  1577     064F  0822               	movf	___lldiv@divisor+2,w
  1578     0650  1C03               	skipc
  1579     0651  0F22               	incfsz	___lldiv@divisor+2,w
  1580     0652  02A6               	subwf	___lldiv@dividend+2,f
  1581     0653  0823               	movf	___lldiv@divisor+3,w
  1582     0654  1C03               	skipc
  1583     0655  0F23               	incfsz	___lldiv@divisor+3,w
  1584     0656  02A7               	subwf	___lldiv@dividend+3,f
  1585     0657                     l873:
  1586     0657  1428               	bsf	___lldiv@quotient,0
  1587     0658                     l875:
  1588     0658  3001               	movlw	1
  1589     0659                     u515:
  1590     0659  1003               	clrc
  1591     065A  0CA3               	rrf	___lldiv@divisor+3,f
  1592     065B  0CA2               	rrf	___lldiv@divisor+2,f
  1593     065C  0CA1               	rrf	___lldiv@divisor+1,f
  1594     065D  0CA0               	rrf	___lldiv@divisor,f
  1595     065E  3EFF               	addlw	-1
  1596     065F  1D03               	skipz
  1597     0660  2E59               	goto	u515
  1598     0661                     l877:
  1599     0661  3001               	movlw	1
  1600     0662  02AC               	subwf	___lldiv@counter,f
  1601     0663  1D03               	btfss	3,2
  1602     0664  2E66               	goto	u521
  1603     0665  2E67               	goto	u520
  1604     0666                     u521:
  1605     0666  2E2E               	goto	l867
  1606     0667                     u520:
  1607     0667                     l879:
  1608     0667  082B               	movf	___lldiv@quotient+3,w
  1609     0668  00A3               	movwf	?___lldiv+3
  1610     0669  082A               	movf	___lldiv@quotient+2,w
  1611     066A  00A2               	movwf	?___lldiv+2
  1612     066B  0829               	movf	___lldiv@quotient+1,w
  1613     066C  00A1               	movwf	?___lldiv+1
  1614     066D  0828               	movf	___lldiv@quotient,w
  1615     066E  00A0               	movwf	?___lldiv
  1616     066F                     l179:
  1617     066F  0008               	return
  1618     0670                     __end_of___lldiv:
  1619     0002                     ___latbits      equ	2
  1620     007E                     btemp           set	126	;btemp
  1621     007E                     wtemp0          set	126
  1622                           
  1623                           	psect	config
  1624                           
  1625                           ;Config register CONFIG @ 0x2007
  1626                           ;	Oscillator Selection bits
  1627                           ;	FOSC = EXTRC, RC oscillator
  1628                           ;	Watchdog Timer Enable bit
  1629                           ;	WDTE = OFF, WDT disabled
  1630                           ;	Power-up Timer Enable bit
  1631                           ;	PWRTE = OFF, PWRT disabled
  1632                           ;	Brown-out Reset Enable bit
  1633                           ;	BOREN = OFF, BOR disabled
  1634                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1635                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1636                           ;	Data EEPROM Memory Code Protection bit
  1637                           ;	CPD = OFF, Data EEPROM code protection off
  1638                           ;	Flash Program Memory Write Enable bits
  1639                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1640                           ;	In-Circuit Debugger Mode bit
  1641                           ;	DEBUG = 0x1, unprogrammed default
  1642                           ;	Flash Program Memory Code Protection bit
  1643                           ;	CP = OFF, Code protection off
  1644     2007                     	org	8199
  1645     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _main->_lcd_print_number
    _lcd_print_number->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_lcd_command
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     868
                                             13 BANK0      9     9      0
                            ___lldiv
                             ___lmul
                        _lcd_command
                           _lcd_data
                           _lcd_init
                   _lcd_print_number
 ---------------------------------------------------------------------------------
 (1) _lcd_print_number                                     2     0      2     454
                                             12 COMMON     2     0      2
                            ___lwdiv
                            ___lwmod
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     167
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     168
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      29
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8      94
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     164
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _lcd_command
   _lcd_data
   _lcd_init
     _lcd_command
   _lcd_print_number
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     22      28     35.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      42      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat May 03 03:36:34 2025

            lcd_data@data 0072                        l31 0508                        l34 0523  
                      l43 06E7                        l52 0740                        l37 0549  
                      l49 0705                       l157 0609                       l423 05C3  
                     l433 0581                       l179 066F                       l801 05B2  
                     l803 05B9                       l811 0550                       l805 05BF  
                     l821 056A                       l813 0553                       l901 073D  
                     l831 0524                       l823 0570                       l815 055A  
                     l911 079B                       l903 0744                       l841 0540  
                     l833 0528                       l825 0577                       l817 055C  
                     l809 054A                       l921 07BE                       l913 07A1  
                     l905 075F                       l851 05E7                       l771 04F4  
                     l835 052E                       l819 0560                       l827 057D  
                     l843 0670                       l931 07E1                       l923 07C4  
                     l915 07A7                       l907 078F                       l861 061C  
                     l853 05F0                       l845 05C4                       l773 04FC  
                     l837 0534                       l781 0517                       l925 07CA  
                     l917 07AD                       l909 0795                       l871 0649  
                     l863 061F                       l855 0601                       l847 05CC  
                     l767 04EF                       l839 053A                       l791 0594  
                     l783 0582                       l775 050A                       l927 07D0  
                     l919 07B8                       l873 0657                       l865 062A  
                     l849 05D0                       l769 04F2                       l793 0596  
                     l785 0584                       l777 050D                       l929 07D6  
                     l875 0658                       l867 062E                       l859 060A  
                     l795 059A                       l787 058A                       l779 050F  
                     l891 06F3                       l877 0661                       l869 0637  
                     l797 05AB                       l789 058D                       l893 06F7  
                     l885 06E8                       l879 0667                       l799 05B1  
                     l895 0702                       l887 06ED                       l897 0709  
                     l889 06F1                       l899 072E                       _RC0 0038  
                     _RC3 003B                       u300 059A                       u301 0599  
                     u320 05AB                       u400 057D                       u321 05AA  
                     u401 057C                       u410 05D0                       u411 05CF  
                     u315 059B                       u500 0649                       u340 05BF  
                     u501 0648                       u421 05D9                       u341 05BE  
                     u325 05A7                       u422 05E0                       u350 0550  
                     u423 05E7                       u335 05B3                       u351 054F  
                     u520 0667                       u280 058A                       u521 0666  
                     u505 0645                       u281 0589                       u450 0601  
                     u370 0560                       u530 0709                       u515 0659  
                     u451 0600                       u435 05E9                       u371 055F  
                     u531 0708                       u460 061C                       u380 056A  
                     u540 0744                       u461 061B                       u445 05F1  
                     u381 0569                       u365 0554                       u541 0743  
                     u295 058E                       u607 051E                       u480 062E  
                     u481 062D                       u617 0544                       u385 0566  
                     u475 0621                       u627 04F7                       u395 0571  
                     u637 0503                       u557 06FD                       u495 0630  
                     u567 072A                       u577 0738                       u587 07E9  
                     u597 0512                      _main 06E8                      btemp 007E  
                    start 0000              main@adc_val0 0030              main@adc_val4 0032  
                   ?_main 0070           __end_of___lldiv 0670           __end_of___lwdiv 05C4  
         __end_of___lwmod 0582                     _PORTD 0008                     _TRISA 0085  
                   _TRISC 0087                     _TRISD 0088       ___lmul@multiplicand 0074  
                   status 0003                     wtemp0 007E           __initialization 07F4  
            __end_of_main 07F4                    ??_main 002D            lcd_command@cmd 0072  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E          __end_of_lcd_data 0524          __end_of_lcd_init 054A  
                  ___lmul 05C4                 ??___lldiv 007D                 ??___lwdiv 0074  
               ??___lwmod 007B            main@adc_val4_1 0034       lcd_print_number@val 007C  
 __end_of__initialization 07FC         ?_lcd_print_number 007C        ??_lcd_print_number 007E  
          __pcstackCOMMON 0070                __pbssBANK0 0036                __pmaintext 06E8  
                 ?___lmul 0070            ___lmul@product 0079                 ?_lcd_data 0070  
               ?_lcd_init 0070                   ___lldiv 060A                   _adc_low 0038  
                 ___lwdiv 0582                   ___lwmod 054A                   __ptext1 0670  
                 __ptext2 0509                   __ptext3 054A                   __ptext4 0582  
                 __ptext5 0524                   __ptext6 04EE                   __ptext7 05C4  
                 __ptext8 060A                ??_lcd_data 0070                ??_lcd_init 0073  
    end_of_initialization 07FC           ___lldiv@divisor 0020           ___lldiv@counter 002C  
           ??_lcd_command 0070            __end_of___lmul 060A       start_initialization 07F4  
                ??___lmul 0078       __end_of_lcd_command 0509                 ___latbits 0002  
           __pcstackBANK0 0020          ___lwdiv@dividend 0072                  ?___lldiv 0020  
                ?___lwdiv 0070                  ?___lwmod 0077          ___lwdiv@quotient 0074  
             _lcd_command 04EE          _lcd_print_number 0670         ___lmul@multiplier 0070  
                _adc_high 003A                  _adc_volt 0036           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0076                  _lcd_data 0509                  _lcd_init 0524  
        ___lwmod@dividend 0079          ___lldiv@dividend 0024          ___lldiv@quotient 0028  
         ___lwmod@divisor 0077           ___lwmod@counter 007B  __end_of_lcd_print_number 06E8  
            ?_lcd_command 0070  
