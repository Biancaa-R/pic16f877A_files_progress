

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 26 20:46:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174     0018                     _RCSTA          set	24
   175     0008                     _PORTD          set	8
   176     001A                     _RCREG          set	26
   177     000C                     _PIR1           set	12
   178     0099                     _SPBRG          set	153
   179     0098                     _TXSTA          set	152
   180     0087                     _TRISC          set	135
   181     0081                     _OPTION_REG     set	129
   182     0088                     _TRISD          set	136
   183                           
   184                           	psect	cinit
   185     07FB                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FB                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191     07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   192     07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195     07FC                     __end_of__initialization:
   196     07FC  0183               	clrf	3
   197     07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMMON
   200     0074                     __pbssCOMMON:
   201     0074                     _rx_data:
   202     0074                     	ds	1
   203                           
   204                           	psect	cstackCOMMON
   205     0070                     __pcstackCOMMON:
   206     0070                     ?_uart_init:
   207     0070                     ?_main:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     main@argc:	
   211                           ; 2 bytes @ 0x0
   212                           
   213     0070                     ??_uart_init:	
   214                           ; 2 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	2
   219     0072                     main@argv:
   220                           
   221                           ; 2 bytes @ 0x2
   222     0072                     	ds	2
   223     0074                     ??_main:
   224                           
   225                           	psect	maintext
   226     07D1                     __pmaintext:	
   227                           ; 1 bytes @ 0x4
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 31 in file "main_1.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;  argc            2    0[COMMON] int 
   236 ;;  argv            2    2[COMMON] PTR PTR unsigned char 
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  2    0[COMMON] int 
   241 ;; Registers used:
   242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         4       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         4       0       0       0       0
   252 ;;Total ram usage:        4 bytes
   253 ;; Hardware stack levels required when called: 1
   254 ;; This function calls:
   255 ;;		_uart_init
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261     07D1                     _main:	
   262                           ;psect for function _main
   263                           
   264     07D1                     l608:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   267                           
   268                           
   269                           ;main_1.c: 33:     uart_init();
   270     07D1  120A  118A  27BC  120A  118A  	fcall	_uart_init
   271     07D6                     l610:
   272                           
   273                           ;main_1.c: 37:         if (PIR1 & 0x20){
   274     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   275     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   276     07D8  1E8C               	btfss	12,5	;volatile
   277     07D9  2FDB               	goto	u21
   278     07DA  2FDC               	goto	u20
   279     07DB                     u21:
   280     07DB  2FD6               	goto	l610
   281     07DC                     u20:
   282     07DC                     l612:
   283                           
   284                           ;main_1.c: 39:         rx_data=RCREG;
   285     07DC  081A               	movf	26,w	;volatile
   286     07DD  00F4               	movwf	_rx_data
   287                           
   288                           ;main_1.c: 40:         switch(rx_data){
   289     07DE  2FEA               	goto	l618
   290     07DF                     l30:	
   291                           ;main_1.c: 41:             case 'A':
   292                           
   293                           
   294                           ;main_1.c: 43:                 PORTD=0x40;
   295     07DF  3040               	movlw	64
   296     07E0  0088               	movwf	8	;volatile
   297                           
   298                           ;main_1.c: 44:                 break;
   299     07E1  2FD6               	goto	l610
   300     07E2                     l32:	
   301                           ;main_1.c: 45:             case 'B':
   302                           
   303                           
   304                           ;main_1.c: 47:                 PORTD=0x02;
   305     07E2  3002               	movlw	2
   306     07E3  0088               	movwf	8	;volatile
   307                           
   308                           ;main_1.c: 48:                 break;
   309     07E4  2FD6               	goto	l610
   310     07E5                     l614:
   311                           
   312                           ;main_1.c: 51:                 PORTD=0x00;
   313     07E5  0188               	clrf	8	;volatile
   314                           
   315                           ;main_1.c: 52:                 break;
   316     07E6  2FD6               	goto	l610
   317     07E7                     l34:	
   318                           ;main_1.c: 53:             case 'D':
   319                           
   320                           
   321                           ;main_1.c: 55:                 PORTD=0x42;
   322     07E7  3042               	movlw	66
   323     07E8  0088               	movwf	8	;volatile
   324                           
   325                           ;main_1.c: 56:                 break;
   326     07E9  2FD6               	goto	l610
   327     07EA                     l618:
   328     07EA  0874               	movf	_rx_data,w
   329                           
   330                           ; Switch size 1, requested type "simple"
   331                           ; Number of cases is 4, Range of values is 65 to 68
   332                           ; switch strategies available:
   333                           ; Name         Instructions Cycles
   334                           ; simple_byte           13     7 (average)
   335                           ; direct_byte           23    11 (fixed)
   336                           ; jumptable            263     9 (fixed)
   337                           ;	Chosen strategy is simple_byte
   338     07EB  3A41               	xorlw	65	; case 65
   339     07EC  1903               	skipnz
   340     07ED  2FDF               	goto	l30
   341     07EE  3A03               	xorlw	3	; case 66
   342     07EF  1903               	skipnz
   343     07F0  2FE2               	goto	l32
   344     07F1  3A01               	xorlw	1	; case 67
   345     07F2  1903               	skipnz
   346     07F3  2FE5               	goto	l614
   347     07F4  3A07               	xorlw	7	; case 68
   348     07F5  1903               	skipnz
   349     07F6  2FE7               	goto	l34
   350     07F7  2FD6               	goto	l610
   351     07F8  120A  118A  2800   	ljmp	start
   352     07FB                     __end_of_main:
   353                           
   354                           	psect	text1
   355     07BC                     __ptext1:	
   356 ;; *************** function _uart_init *****************
   357 ;; Defined at:
   358 ;;		line 63 in file "main_1.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used: 1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385     07BC                     _uart_init:	
   386                           ;psect for function _uart_init
   387                           
   388     07BC                     l584:	
   389                           ;incstack = 0
   390                           ; Regs used in _uart_init: [wreg+status,2+status,0]
   391                           
   392                           
   393                           ;main_1.c: 68:     TRISD =0x00;
   394     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   395     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   396     07BE  0188               	clrf	8	;volatile
   397                           
   398                           ;main_1.c: 69:     PORTD=0x00;
   399     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   400     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   401     07C1  0188               	clrf	8	;volatile
   402     07C2                     l586:
   403                           
   404                           ;main_1.c: 70:     OPTION_REG &= 0x7F;
   405     07C2  307F               	movlw	127
   406     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   407     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   408     07C5  0581               	andwf	1,f	;volatile
   409     07C6                     l588:
   410                           
   411                           ;main_1.c: 72:     TRISC =0xC0;
   412     07C6  30C0               	movlw	192
   413     07C7  0087               	movwf	7	;volatile
   414     07C8                     l590:
   415                           
   416                           ;main_1.c: 73:     TXSTA =0x20;
   417     07C8  3020               	movlw	32
   418     07C9  0098               	movwf	24	;volatile
   419     07CA                     l592:
   420                           
   421                           ;main_1.c: 75:     SPBRG =0x09;
   422     07CA  3009               	movlw	9
   423     07CB  0099               	movwf	25	;volatile
   424     07CC                     l594:
   425                           
   426                           ;main_1.c: 76:     RCSTA=0x90;
   427     07CC  3090               	movlw	144
   428     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   429     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   430     07CF  0098               	movwf	24	;volatile
   431     07D0                     l40:
   432     07D0  0008               	return
   433     07D1                     __end_of_uart_init:
   434     0002                     ___latbits      equ	2
   435     007E                     btemp           set	126	;btemp
   436     007E                     wtemp0          set	126
   437                           
   438                           	psect	config
   439                           
   440                           ;Config register CONFIG @ 0x2007
   441                           ;	Oscillator Selection bits
   442                           ;	FOSC = EXTRC, RC oscillator
   443                           ;	Watchdog Timer Enable bit
   444                           ;	WDTE = OFF, WDT disabled
   445                           ;	Power-up Timer Enable bit
   446                           ;	PWRTE = OFF, PWRT disabled
   447                           ;	Brown-out Reset Enable bit
   448                           ;	BOREN = OFF, BOR disabled
   449                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   450                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   451                           ;	Data EEPROM Memory Code Protection bit
   452                           ;	CPD = OFF, Data EEPROM code protection off
   453                           ;	Flash Program Memory Write Enable bits
   454                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   455                           ;	In-Circuit Debugger Mode bit
   456                           ;	DEBUG = 0x1, unprogrammed default
   457                           ;	Flash Program Memory Code Protection bit
   458                           ;	CP = OFF, Code protection off
   459     2007                     	org	8199
   460     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4       0
                                              0 COMMON     4     0      4
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 26 20:46:00 2025

                     l30 07DF                       l40 07D0                       l32 07E2  
                     l34 07E7                       u20 07DC                       u21 07DB  
                    l610 07D6                      l612 07DC                      l614 07E5  
                    l608 07D1                      l618 07EA                      l590 07C8  
                    l592 07CA                      l584 07BC                      l594 07CC  
                    l586 07C2                      l588 07C6                     _PIR1 000C  
                   _main 07D1                     btemp 007E                     start 0000  
                  ?_main 0070                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _TXSTA 0098                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
                 ??_main 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07D1                  __ptext1 07BC                  _rx_data 0074  
   end_of_initialization 07FC        __end_of_uart_init 07D1      start_initialization 07FB  
            __pbssCOMMON 0074                ___latbits 0002                _uart_init 07BC  
             ?_uart_init 0070                 main@argc 0070                 main@argv 0072  
            ??_uart_init 0070               _OPTION_REG 0081  
