

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu May 29 17:47:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	idataCOMMON
   178     0778                     __pidataCOMMON:
   179                           
   180                           ;initializer for _arr
   181     0778  34FC               	retlw	252
   182     0779  3460               	retlw	96
   183     077A  34DA               	retlw	218
   184     077B  34F2               	retlw	242
   185     077C  3466               	retlw	102
   186     077D  34B6               	retlw	182
   187     077E  34BE               	retlw	190
   188     077F  34E0               	retlw	224
   189     0780  34FE               	retlw	254
   190     0781  34F6               	retlw	246
   191     0006                     _PORTB          set	6
   192     0081                     _OPTION_REG     set	129
   193     0086                     _TRISB          set	134
   194                           
   195                           	psect	cinit
   196     07BF                     start_initialization:	
   197                           ; #config settings
   198                           
   199     07BF                     __initialization:
   200                           
   201                           ; Initialize objects allocated to COMMON
   202     07BF  120A  118A  2778  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   203     07C4  00F0               	movwf	__pdataCOMMON& (0+127)
   204     07C5  120A  118A  2779  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   205     07CA  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   206     07CB  120A  118A  277A  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   207     07D0  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   208     07D1  120A  118A  277B  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   209     07D6  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   210     07D7  120A  118A  277C  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   211     07DC  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   212     07DD  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   213     07E2  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   214     07E3  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   215     07E8  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   216     07E9  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   217     07EE  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   218     07EF  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   219     07F4  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   220     07F5  120A  118A  2781  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   221     07FA  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   222                           
   223                           ; Clear objects allocated to COMMON
   224     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   225     07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228     07FC                     __end_of__initialization:
   229     07FC  0183               	clrf	3
   230     07FD  120A  118A  2F95   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233     007D                     __pbssCOMMON:
   234     007D                     _i:
   235     007D                     	ds	1
   236                           
   237                           	psect	dataCOMMON
   238     0070                     __pdataCOMMON:
   239     0070                     _arr:
   240     0070                     	ds	10
   241                           
   242                           	psect	inittext
   243     0782                     init_fetch0:	
   244                           ;	Called with low address in FSR and high address in W
   245                           
   246     0782  087E               	movf	btemp,w
   247     0783  008A               	movwf	10
   248     0784  087F               	movf	btemp+1,w
   249     0785  0082               	movwf	2
   250     0786                     init_ram0:	
   251                           ;Called with:
   252                           ;	high address of idata address in btemp 
   253                           ;	low address of idata address in btemp+1 
   254                           ;	low address of data in FSR
   255                           ;	high address + 1 of data in btemp-1
   256                           
   257     0786  120A  118A  2782  120A  118A  	fcall	init_fetch0
   258     078B  0080               	movwf	0
   259     078C  0A84               	incf	4,f
   260     078D  0804               	movf	4,w
   261     078E  067D               	xorwf	btemp+-1,w
   262     078F  1903               	btfsc	3,2
   263     0790  3400               	retlw	0
   264     0791  0AFF               	incf	btemp+1,f
   265     0792  1903               	btfsc	3,2
   266     0793  0AFE               	incf	btemp,f
   267     0794  2F86               	goto	init_ram0
   268                           
   269                           	psect	cstackCOMMON
   270     007A                     __pcstackCOMMON:
   271     007A                     ?_main:
   272     007A                     ??_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275                           
   276                           ; 1 bytes @ 0x0
   277     007A                     	ds	3
   278                           
   279                           	psect	maintext
   280     0795                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 16 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          3       0       0       0       0
   303 ;;      Totals:         3       0       0       0       0
   304 ;;Total ram usage:        3 bytes
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312     0795                     _main:	
   313                           ;psect for function _main
   314                           
   315     0795                     l565:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   318                           
   319                           
   320                           ;main.c: 17:     TRISB = 0x00;
   321     0795  1683               	bsf	3,5	;RP0=1, select bank1
   322     0796  1303               	bcf	3,6	;RP1=0, select bank1
   323     0797  0186               	clrf	6	;volatile
   324     0798                     l567:
   325                           
   326                           ;main.c: 18:     OPTION_REG &= 0x7F;
   327     0798  307F               	movlw	127
   328     0799  0581               	andwf	1,f	;volatile
   329     079A                     l569:
   330                           
   331                           ;main.c: 19:     PORTB = 0xFF;
   332     079A  30FF               	movlw	255
   333     079B  1283               	bcf	3,5	;RP0=0, select bank0
   334     079C  1303               	bcf	3,6	;RP1=0, select bank0
   335     079D  0086               	movwf	6	;volatile
   336     079E                     l571:
   337                           
   338                           ;main.c: 21:     i = 0;
   339     079E  01FD               	clrf	_i
   340     079F                     l573:
   341                           
   342                           ;main.c: 24:         PORTB = ~arr[i];
   343     079F  087D               	movf	_i,w
   344     07A0  3E70               	addlw	(low (_arr| 0))& (0+255)
   345     07A1  0084               	movwf	4
   346     07A2  0900               	comf	0,w
   347     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   348     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   349     07A5  0086               	movwf	6	;volatile
   350     07A6                     l575:
   351                           
   352                           ;main.c: 25:         _delay((unsigned long)((1000)*(6000000/4000.0)));
   353     07A6  3008               	movlw	8
   354     07A7  00FC               	movwf	??_main+2
   355     07A8  309D               	movlw	157
   356     07A9  00FB               	movwf	??_main+1
   357     07AA  3005               	movlw	5
   358     07AB  00FA               	movwf	??_main
   359     07AC                     u27:
   360     07AC  0BFA               	decfsz	??_main,f
   361     07AD  2FAC               	goto	u27
   362     07AE  0BFB               	decfsz	??_main+1,f
   363     07AF  2FAC               	goto	u27
   364     07B0  0BFC               	decfsz	??_main+2,f
   365     07B1  2FAC               	goto	u27
   366     07B2  2FB3               	nop2
   367     07B3                     l577:
   368                           
   369                           ;main.c: 27:         i++;
   370     07B3  3001               	movlw	1
   371     07B4  07FD               	addwf	_i,f
   372     07B5                     l579:
   373                           
   374                           ;main.c: 28:         if(i > 9) {
   375     07B5  300A               	movlw	10
   376     07B6  027D               	subwf	_i,w
   377     07B7  1C03               	skipc
   378     07B8  2FBA               	goto	u11
   379     07B9  2FBB               	goto	u10
   380     07BA                     u11:
   381     07BA  2F9F               	goto	l573
   382     07BB                     u10:
   383     07BB  2F9E               	goto	l571
   384     07BC  120A  118A  2800   	ljmp	start
   385     07BF                     __end_of_main:
   386     0002                     ___latbits      equ	2
   387     007E                     btemp           set	126	;btemp
   388     007E                     wtemp0          set	126
   389                           
   390                           	psect	config
   391                           
   392                           ;Config register CONFIG @ 0x2007
   393                           ;	Oscillator Selection bits
   394                           ;	FOSC = HS, HS oscillator
   395                           ;	Watchdog Timer Enable bit
   396                           ;	WDTE = OFF, WDT disabled
   397                           ;	Power-up Timer Enable bit
   398                           ;	PWRTE = OFF, PWRT disabled
   399                           ;	Brown-out Reset Enable bit
   400                           ;	BOREN = OFF, BOR disabled
   401                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   402                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   403                           ;	Data EEPROM Memory Code Protection bit
   404                           ;	CPD = OFF, Data EEPROM code protection off
   405                           ;	Flash Program Memory Write Enable bits
   406                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   407                           ;	In-Circuit Debugger Mode bit
   408                           ;	DEBUG = 0x1, unprogrammed default
   409                           ;	Flash Program Memory Code Protection bit
   410                           ;	CP = OFF, Code protection off
   411     2007                     	org	8199
   412     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       0      0.0%
BITBANK0            80      0       0      0.0%
COMMON              14      3      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      14      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu May 29 17:47:52 2025

                      _i 007D                        pc 0002                       u10 07BB  
                     u11 07BA                       u27 07AC                       fsr 0004  
                    l571 079E                      l573 079F                      l565 0795  
                    l575 07A6                      l567 0798                      l577 07B3  
                    l569 079A                      l579 07B5                      _arr 0070  
                    fsr0 0004                      indf 0000                     _main 0795  
                   btemp 007E                     start 0000                    ?_main 007A  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07BF  
           __end_of_main 07BF                   ??_main 007A             __pdataCOMMON 0070  
__end_of__initialization 07FC           __pcstackCOMMON 007A               __pmaintext 0795  
   end_of_initialization 07FC            __pidataCOMMON 0778      start_initialization 07BF  
             init_fetch0 0782              __pbssCOMMON 007D                ___latbits 0002  
               init_ram0 0786               _OPTION_REG 0081  
