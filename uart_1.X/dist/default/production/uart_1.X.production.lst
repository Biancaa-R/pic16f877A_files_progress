

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 26 20:46:56 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     0091                     SSPCON2         equ	145	;# 
    99     0092                     PR2             equ	146	;# 
   100     0093                     SSPADD          equ	147	;# 
   101     0094                     SSPSTAT         equ	148	;# 
   102     0098                     TXSTA           equ	152	;# 
   103     0099                     SPBRG           equ	153	;# 
   104     009C                     CMCON           equ	156	;# 
   105     009D                     CVRCON          equ	157	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009C                     CMCON           equ	156	;# 
   165     009D                     CVRCON          equ	157	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174                           
   175                           	psect	nvCOMMON
   176     0076                     __pnvCOMMON:
   177     0076                     _value:
   178     0076                     	ds	1
   179     0018                     _RCSTA          set	24
   180     0019                     _TXREG          set	25
   181     0006                     _PORTB          set	6
   182     0099                     _SPBRG          set	153
   183     0098                     _TXSTA          set	152
   184     0087                     _TRISC          set	135
   185     0081                     _OPTION_REG     set	129
   186     0086                     _TRISB          set	134
   187                           
   188                           	psect	cinit
   189     07FC                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07FC                     __initialization:
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2FCD   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201     0070                     __pcstackCOMMON:
   202     0070                     ?_uart_init:
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     main@argc:	
   207                           ; 2 bytes @ 0x0
   208                           
   209     0070                     ??_uart_init:	
   210                           ; 2 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	2
   215     0072                     main@argv:
   216                           
   217                           ; 2 bytes @ 0x2
   218     0072                     	ds	2
   219     0074                     ??_main:
   220                           
   221                           ; 1 bytes @ 0x4
   222     0074                     	ds	2
   223                           
   224                           	psect	maintext
   225     07CD                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 29 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;  argc            2    0[COMMON] int 
   234 ;;  argv            2    2[COMMON] PTR PTR unsigned char 
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  2    0[COMMON] int 
   239 ;; Registers used:
   240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   246 ;;      Params:         4       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0
   248 ;;      Temps:          2       0       0       0       0
   249 ;;      Totals:         6       0       0       0       0
   250 ;;Total ram usage:        6 bytes
   251 ;; Hardware stack levels required when called: 1
   252 ;; This function calls:
   253 ;;		_uart_init
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259     07CD                     _main:	
   260                           ;psect for function _main
   261                           
   262     07CD                     l613:	
   263                           ;incstack = 0
   264                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   265                           
   266                           
   267                           ;main.c: 31:     uart_init();
   268     07CD  120A  118A  27B7  120A  118A  	fcall	_uart_init
   269     07D2                     l615:
   270                           
   271                           ;main.c: 33:         value =PORTB;
   272     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   273     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   274     07D4  0806               	movf	6,w	;volatile
   275     07D5  00F6               	movwf	_value
   276                           
   277                           ;main.c: 34:         switch(value){
   278     07D6  2FEB               	goto	l627
   279     07D7                     l29:	
   280                           ;main.c: 35:             case 0xE0:
   281                           
   282                           
   283                           ;main.c: 36:                 TXREG='A';
   284     07D7  3041               	movlw	65
   285     07D8  0099               	movwf	25	;volatile
   286     07D9                     l617:
   287                           
   288                           ;main.c: 37:                 _delay((unsigned long)((100)*(6000000/4000.0)));
   289     07D9  30C3               	movlw	195
   290     07DA  00F5               	movwf	??_main+1
   291     07DB  30CD               	movlw	205
   292     07DC  00F4               	movwf	??_main
   293     07DD                     u17:
   294     07DD  0BF4               	decfsz	??_main,f
   295     07DE  2FDD               	goto	u17
   296     07DF  0BF5               	decfsz	??_main+1,f
   297     07E0  2FDD               	goto	u17
   298                           
   299                           ;main.c: 38:                 break;
   300     07E1  2FD2               	goto	l615
   301     07E2                     l31:	
   302                           ;main.c: 39:             case 0xD0:
   303                           
   304                           
   305                           ;main.c: 40:                 TXREG='B';
   306     07E2  3042               	movlw	66
   307     07E3  0099               	movwf	25	;volatile
   308     07E4  2FD9               	goto	l617
   309     07E5                     l32:	
   310                           ;main.c: 43:             case 0xB0:
   311                           
   312                           
   313                           ;main.c: 44:                 TXREG='C';
   314     07E5  3043               	movlw	67
   315     07E6  0099               	movwf	25	;volatile
   316     07E7  2FD9               	goto	l617
   317     07E8                     l33:	
   318                           ;main.c: 47:             case 0x70:
   319                           
   320                           
   321                           ;main.c: 48:                 TXREG='D';
   322     07E8  3044               	movlw	68
   323     07E9  0099               	movwf	25	;volatile
   324     07EA  2FD9               	goto	l617
   325     07EB                     l627:
   326     07EB  0876               	movf	_value,w
   327                           
   328                           ; Switch size 1, requested type "simple"
   329                           ; Number of cases is 4, Range of values is 112 to 224
   330                           ; switch strategies available:
   331                           ; Name         Instructions Cycles
   332                           ; simple_byte           13     7 (average)
   333                           ; jumptable            263     9 (fixed)
   334                           ;	Chosen strategy is simple_byte
   335     07EC  3A70               	xorlw	112	; case 112
   336     07ED  1903               	skipnz
   337     07EE  2FE8               	goto	l33
   338     07EF  3AC0               	xorlw	192	; case 176
   339     07F0  1903               	skipnz
   340     07F1  2FE5               	goto	l32
   341     07F2  3A60               	xorlw	96	; case 208
   342     07F3  1903               	skipnz
   343     07F4  2FE2               	goto	l31
   344     07F5  3A30               	xorlw	48	; case 224
   345     07F6  1903               	skipnz
   346     07F7  2FD7               	goto	l29
   347     07F8  2FD2               	goto	l615
   348     07F9  120A  118A  2800   	ljmp	start
   349     07FC                     __end_of_main:
   350                           
   351                           	psect	text1
   352     07B7                     __ptext1:	
   353 ;; *************** function _uart_init *****************
   354 ;; Defined at:
   355 ;;		line 56 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382     07B7                     _uart_init:	
   383                           ;psect for function _uart_init
   384                           
   385     07B7                     l583:	
   386                           ;incstack = 0
   387                           ; Regs used in _uart_init: [wreg+status,2+status,0]
   388                           
   389                           
   390                           ;main.c: 58:     TRISB=0xF0;
   391     07B7  30F0               	movlw	240
   392     07B8  1683               	bsf	3,5	;RP0=1, select bank1
   393     07B9  1303               	bcf	3,6	;RP1=0, select bank1
   394     07BA  0086               	movwf	6	;volatile
   395     07BB                     l585:
   396                           
   397                           ;main.c: 59:     PORTB=0x00;
   398     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   399     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   400     07BD  0186               	clrf	6	;volatile
   401     07BE                     l587:
   402                           
   403                           ;main.c: 60:     OPTION_REG &= 0x7F;
   404     07BE  307F               	movlw	127
   405     07BF  1683               	bsf	3,5	;RP0=1, select bank1
   406     07C0  1303               	bcf	3,6	;RP1=0, select bank1
   407     07C1  0581               	andwf	1,f	;volatile
   408     07C2                     l589:
   409                           
   410                           ;main.c: 62:     TRISC =0xC0;
   411     07C2  30C0               	movlw	192
   412     07C3  0087               	movwf	7	;volatile
   413     07C4                     l591:
   414                           
   415                           ;main.c: 63:     TXSTA =0x20;
   416     07C4  3020               	movlw	32
   417     07C5  0098               	movwf	24	;volatile
   418     07C6                     l593:
   419                           
   420                           ;main.c: 65:     SPBRG =0x09;
   421     07C6  3009               	movlw	9
   422     07C7  0099               	movwf	25	;volatile
   423     07C8                     l595:
   424                           
   425                           ;main.c: 66:     RCSTA=0x90;
   426     07C8  3090               	movlw	144
   427     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   428     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   429     07CB  0098               	movwf	24	;volatile
   430     07CC                     l39:
   431     07CC  0008               	return
   432     07CD                     __end_of_uart_init:
   433     0002                     ___latbits      equ	2
   434     007E                     btemp           set	126	;btemp
   435     007E                     wtemp0          set	126
   436                           
   437                           	psect	config
   438                           
   439                           ;Config register CONFIG @ 0x2007
   440                           ;	Oscillator Selection bits
   441                           ;	FOSC = EXTRC, RC oscillator
   442                           ;	Watchdog Timer Enable bit
   443                           ;	WDTE = OFF, WDT disabled
   444                           ;	Power-up Timer Enable bit
   445                           ;	PWRTE = OFF, PWRT disabled
   446                           ;	Brown-out Reset Enable bit
   447                           ;	BOREN = OFF, BOR disabled
   448                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   449                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   450                           ;	Data EEPROM Memory Code Protection bit
   451                           ;	CPD = OFF, Data EEPROM code protection off
   452                           ;	Flash Program Memory Write Enable bits
   453                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   454                           ;	In-Circuit Debugger Mode bit
   455                           ;	DEBUG = 0x1, unprogrammed default
   456                           ;	Flash Program Memory Code Protection bit
   457                           ;	CP = OFF, Code protection off
   458     2007                     	org	8199
   459     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4       0
                                              0 COMMON     6     2      4
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      6       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 26 20:46:56 2025

                     l31 07E2                       l32 07E5                       l33 07E8  
                     l29 07D7                       l39 07CC                       u17 07DD  
                    l613 07CD                      l615 07D2                      l617 07D9  
                    l627 07EB                      l591 07C4                      l583 07B7  
                    l593 07C6                      l585 07BB                      l595 07C8  
                    l587 07BE                      l589 07C2                     _main 07CD  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098                    _value 0076                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pnvCOMMON 0076               __pmaintext 07CD                  __ptext1 07B7  
   end_of_initialization 07FC        __end_of_uart_init 07CD      start_initialization 07FC  
              ___latbits 0002                _uart_init 07B7               ?_uart_init 0070  
               main@argc 0070                 main@argv 0072              ??_uart_init 0070  
             _OPTION_REG 0081  
