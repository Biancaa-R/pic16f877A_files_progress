

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat May 03 02:41:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,space=0,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0004                     fsr             equ	4
    55     0004                     fsr0            equ	4
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0000                     INDF            equ	0	;# 
    63     0001                     TMR0            equ	1	;# 
    64     0002                     PCL             equ	2	;# 
    65     0003                     STATUS          equ	3	;# 
    66     0004                     FSR             equ	4	;# 
    67     0005                     PORTA           equ	5	;# 
    68     0006                     PORTB           equ	6	;# 
    69     0007                     PORTC           equ	7	;# 
    70     0008                     PORTD           equ	8	;# 
    71     0009                     PORTE           equ	9	;# 
    72     000A                     PCLATH          equ	10	;# 
    73     000B                     INTCON          equ	11	;# 
    74     000C                     PIR1            equ	12	;# 
    75     000D                     PIR2            equ	13	;# 
    76     000E                     TMR1            equ	14	;# 
    77     000E                     TMR1L           equ	14	;# 
    78     000F                     TMR1H           equ	15	;# 
    79     0010                     T1CON           equ	16	;# 
    80     0011                     TMR2            equ	17	;# 
    81     0012                     T2CON           equ	18	;# 
    82     0013                     SSPBUF          equ	19	;# 
    83     0014                     SSPCON          equ	20	;# 
    84     0015                     CCPR1           equ	21	;# 
    85     0015                     CCPR1L          equ	21	;# 
    86     0016                     CCPR1H          equ	22	;# 
    87     0017                     CCP1CON         equ	23	;# 
    88     0018                     RCSTA           equ	24	;# 
    89     0019                     TXREG           equ	25	;# 
    90     001A                     RCREG           equ	26	;# 
    91     001B                     CCPR2           equ	27	;# 
    92     001B                     CCPR2L          equ	27	;# 
    93     001C                     CCPR2H          equ	28	;# 
    94     001D                     CCP2CON         equ	29	;# 
    95     001E                     ADRESH          equ	30	;# 
    96     001F                     ADCON0          equ	31	;# 
    97     0081                     OPTION_REG      equ	129	;# 
    98     0085                     TRISA           equ	133	;# 
    99     0086                     TRISB           equ	134	;# 
   100     0087                     TRISC           equ	135	;# 
   101     0088                     TRISD           equ	136	;# 
   102     0089                     TRISE           equ	137	;# 
   103     008C                     PIE1            equ	140	;# 
   104     008D                     PIE2            equ	141	;# 
   105     008E                     PCON            equ	142	;# 
   106     0091                     SSPCON2         equ	145	;# 
   107     0092                     PR2             equ	146	;# 
   108     0093                     SSPADD          equ	147	;# 
   109     0094                     SSPSTAT         equ	148	;# 
   110     0098                     TXSTA           equ	152	;# 
   111     0099                     SPBRG           equ	153	;# 
   112     009C                     CMCON           equ	156	;# 
   113     009D                     CVRCON          equ	157	;# 
   114     009E                     ADRESL          equ	158	;# 
   115     009F                     ADCON1          equ	159	;# 
   116     010C                     EEDATA          equ	268	;# 
   117     010D                     EEADR           equ	269	;# 
   118     010E                     EEDATH          equ	270	;# 
   119     010F                     EEADRH          equ	271	;# 
   120     018C                     EECON1          equ	396	;# 
   121     018D                     EECON2          equ	397	;# 
   122     0000                     INDF            equ	0	;# 
   123     0001                     TMR0            equ	1	;# 
   124     0002                     PCL             equ	2	;# 
   125     0003                     STATUS          equ	3	;# 
   126     0004                     FSR             equ	4	;# 
   127     0005                     PORTA           equ	5	;# 
   128     0006                     PORTB           equ	6	;# 
   129     0007                     PORTC           equ	7	;# 
   130     0008                     PORTD           equ	8	;# 
   131     0009                     PORTE           equ	9	;# 
   132     000A                     PCLATH          equ	10	;# 
   133     000B                     INTCON          equ	11	;# 
   134     000C                     PIR1            equ	12	;# 
   135     000D                     PIR2            equ	13	;# 
   136     000E                     TMR1            equ	14	;# 
   137     000E                     TMR1L           equ	14	;# 
   138     000F                     TMR1H           equ	15	;# 
   139     0010                     T1CON           equ	16	;# 
   140     0011                     TMR2            equ	17	;# 
   141     0012                     T2CON           equ	18	;# 
   142     0013                     SSPBUF          equ	19	;# 
   143     0014                     SSPCON          equ	20	;# 
   144     0015                     CCPR1           equ	21	;# 
   145     0015                     CCPR1L          equ	21	;# 
   146     0016                     CCPR1H          equ	22	;# 
   147     0017                     CCP1CON         equ	23	;# 
   148     0018                     RCSTA           equ	24	;# 
   149     0019                     TXREG           equ	25	;# 
   150     001A                     RCREG           equ	26	;# 
   151     001B                     CCPR2           equ	27	;# 
   152     001B                     CCPR2L          equ	27	;# 
   153     001C                     CCPR2H          equ	28	;# 
   154     001D                     CCP2CON         equ	29	;# 
   155     001E                     ADRESH          equ	30	;# 
   156     001F                     ADCON0          equ	31	;# 
   157     0081                     OPTION_REG      equ	129	;# 
   158     0085                     TRISA           equ	133	;# 
   159     0086                     TRISB           equ	134	;# 
   160     0087                     TRISC           equ	135	;# 
   161     0088                     TRISD           equ	136	;# 
   162     0089                     TRISE           equ	137	;# 
   163     008C                     PIE1            equ	140	;# 
   164     008D                     PIE2            equ	141	;# 
   165     008E                     PCON            equ	142	;# 
   166     0091                     SSPCON2         equ	145	;# 
   167     0092                     PR2             equ	146	;# 
   168     0093                     SSPADD          equ	147	;# 
   169     0094                     SSPSTAT         equ	148	;# 
   170     0098                     TXSTA           equ	152	;# 
   171     0099                     SPBRG           equ	153	;# 
   172     009C                     CMCON           equ	156	;# 
   173     009D                     CVRCON          equ	157	;# 
   174     009E                     ADRESL          equ	158	;# 
   175     009F                     ADCON1          equ	159	;# 
   176     010C                     EEDATA          equ	268	;# 
   177     010D                     EEADR           equ	269	;# 
   178     010E                     EEDATH          equ	270	;# 
   179     010F                     EEADRH          equ	271	;# 
   180     018C                     EECON1          equ	396	;# 
   181     018D                     EECON2          equ	397	;# 
   182     001E                     _ADRESH         set	30
   183     001F                     _ADCON0         set	31
   184     0006                     _PORTB          set	6
   185     0008                     _PORTD          set	8
   186     0007                     _PORTC          set	7
   187     009E                     _ADRESL         set	158
   188     009F                     _ADCON1         set	159
   189     0086                     _TRISB          set	134
   190     0088                     _TRISD          set	136
   191     0087                     _TRISC          set	135
   192     0428                     _TRISA0         set	1064
   193                           
   194                           	psect	cinit
   195     07F3                     start_initialization:	
   196                           ; #config settings
   197                           
   198     07F3                     __initialization:
   199                           
   200                           ; Clear objects allocated to BANK0
   201     07F3  1383               	bcf	3,7	;select IRP bank0
   202     07F4  3020               	movlw	low __pbssBANK0
   203     07F5  0084               	movwf	4
   204     07F6  3034               	movlw	low (__pbssBANK0+20)
   205     07F7  120A  118A  25C0  120A  118A  	fcall	clear_ram0
   206     07FC                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209     07FC                     __end_of__initialization:
   210     07FC  0183               	clrf	3
   211     07FD  120A  118A  2EC3   	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	bssBANK0
   214     0020                     __pbssBANK0:
   215     0020                     _d4:
   216     0020                     	ds	2
   217     0022                     _d3:
   218     0022                     	ds	2
   219     0024                     _d2:
   220     0024                     	ds	2
   221     0026                     _d1:
   222     0026                     	ds	2
   223     0028                     _j:
   224     0028                     	ds	2
   225     002A                     _i:
   226     002A                     	ds	2
   227     002C                     _adc_volt:
   228     002C                     	ds	2
   229     002E                     _calibrated_val:
   230     002E                     	ds	2
   231     0030                     _adc_low:
   232     0030                     	ds	2
   233     0032                     _adc_high:
   234     0032                     	ds	2
   235                           
   236                           	psect	clrtext
   237     05C0                     clear_ram0:	
   238                           ;	Called with FSR containing the base address, and
   239                           ;	W with the last address+1
   240                           
   241     05C0  0064               	clrwdt	;clear the watchdog before getting into this loop
   242     05C1                     clrloop0:
   243     05C1  0180               	clrf	0	;clear RAM location pointed to by FSR
   244     05C2  0A84               	incf	4,f	;increment pointer
   245     05C3  0604               	xorwf	4,w	;XOR with final address
   246     05C4  1903               	btfsc	3,2	;have we reached the end yet?
   247     05C5  3400               	retlw	0	;all done for this memory range, return
   248     05C6  0604               	xorwf	4,w	;XOR again to restore value
   249     05C7  2DC1               	goto	clrloop0	;do the next byte
   250                           
   251                           	psect	cstackCOMMON
   252     0070                     __pcstackCOMMON:
   253     0070                     ?_lcd_command:
   254     0070                     ?_initLCD:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_lcd_data:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_delay_ms:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ?_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ?___lwdiv:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     delay_ms@count:	
   270                           ; 2 bytes @ 0x0
   271                           
   272     0070                     ___lwdiv@divisor:	
   273                           ; 2 bytes @ 0x0
   274                           
   275     0070                     ??_lcd_command:	
   276                           ; 2 bytes @ 0x0
   277                           
   278     0070                     ??_lcd_data:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283     0070                     	ds	2
   284     0072                     lcd_command@cmd:
   285     0072                     lcd_data@data:	
   286                           ; 1 bytes @ 0x2
   287                           
   288     0072                     delay_ms@i:	
   289                           ; 1 bytes @ 0x2
   290                           
   291     0072                     ___lwdiv@dividend:	
   292                           ; 2 bytes @ 0x2
   293                           
   294     0072                     ??_delay_ms:	
   295                           ; 2 bytes @ 0x2
   296                           
   297                           
   298                           ; 1 bytes @ 0x2
   299     0072                     	ds	1
   300     0073                     ??_initLCD:
   301                           
   302                           ; 1 bytes @ 0x3
   303     0073                     	ds	1
   304     0074                     ___lwdiv@quotient:
   305     0074                     ??___lwdiv:	
   306                           ; 2 bytes @ 0x4
   307                           
   308                           
   309                           ; 1 bytes @ 0x4
   310     0074                     	ds	2
   311     0076                     ___lwdiv@counter:
   312                           
   313                           ; 1 bytes @ 0x6
   314     0076                     	ds	1
   315     0077                     ?___wmul:
   316     0077                     ___wmul@multiplier:	
   317                           ; 2 bytes @ 0x7
   318                           
   319                           
   320                           ; 2 bytes @ 0x7
   321     0077                     	ds	2
   322     0079                     ___wmul@multiplicand:
   323                           
   324                           ; 2 bytes @ 0x9
   325     0079                     	ds	2
   326     007B                     ___wmul@product:
   327     007B                     ??___wmul:	
   328                           ; 2 bytes @ 0xB
   329                           
   330                           
   331                           ; 1 bytes @ 0xB
   332     007B                     	ds	2
   333                           
   334                           	psect	cstackBANK0
   335     0034                     __pcstackBANK0:
   336     0034                     ?_lcd_num_conv:
   337     0034                     lcd_num_conv@i:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342     0034                     	ds	2
   343     0036                     ??_lcd_num_conv:
   344                           
   345                           ; 1 bytes @ 0x2
   346     0036                     	ds	2
   347     0038                     lcd_num_conv@s:
   348                           
   349                           ; 2 bytes @ 0x4
   350     0038                     	ds	2
   351     003A                     lcd_num_conv@k:
   352                           
   353                           ; 5 bytes @ 0x6
   354     003A                     	ds	5
   355     003F                     lcd_num_conv@j:
   356                           
   357                           ; 2 bytes @ 0xB
   358     003F                     	ds	2
   359     0041                     lcd_num_conv@m:
   360                           
   361                           ; 2 bytes @ 0xD
   362     0041                     	ds	2
   363     0043                     ??_main:
   364                           
   365                           ; 1 bytes @ 0xF
   366     0043                     	ds	2
   367                           
   368                           	psect	maintext
   369     06C3                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 145 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       2       0       0       0
   392 ;;      Totals:         0       2       0       0       0
   393 ;;Total ram usage:        2 bytes
   394 ;; Hardware stack levels required when called: 2
   395 ;; This function calls:
   396 ;;		___wmul
   397 ;;		_delay_ms
   398 ;;		_initLCD
   399 ;;		_lcd_command
   400 ;;		_lcd_num_conv
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406     06C3                     _main:	
   407                           ;psect for function _main
   408                           
   409     06C3                     l907:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   412                           
   413                           
   414                           ;main.c: 147:     initLCD();
   415     06C3  120A  118A  267C  120A  118A  	fcall	_initLCD
   416     06C8                     l909:
   417                           
   418                           ;main.c: 148:     ADCON1 = 0x8E;
   419     06C8  308E               	movlw	142
   420     06C9  1683               	bsf	3,5	;RP0=1, select bank1
   421     06CA  1303               	bcf	3,6	;RP1=0, select bank1
   422     06CB  009F               	movwf	31	;volatile
   423     06CC                     l911:
   424                           
   425                           ;main.c: 149:     ADCON0 = 0x81;
   426     06CC  3081               	movlw	129
   427     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   428     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   429     06CF  009F               	movwf	31	;volatile
   430     06D0                     l913:
   431                           
   432                           ;main.c: 150:     TRISA0 = 1;
   433     06D0  1683               	bsf	3,5	;RP0=1, select bank1
   434     06D1  1303               	bcf	3,6	;RP1=0, select bank1
   435     06D2  1405               	bsf	5,0	;volatile
   436     06D3                     l915:
   437                           
   438                           ;main.c: 153:     ADCON0 |=0x04;
   439     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   440     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   441     06D5  151F               	bsf	31,2	;volatile
   442                           
   443                           ;main.c: 154:     delay_ms(10);
   444     06D6  300A               	movlw	10
   445     06D7  00F0               	movwf	delay_ms@count
   446     06D8  3000               	movlw	0
   447     06D9  00F1               	movwf	delay_ms@count+1
   448     06DA  120A  118A  25C8  120A  118A  	fcall	_delay_ms
   449     06DF                     l76:	
   450                           ;main.c: 155:     while(ADCON0 &0X04);
   451                           
   452     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   453     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   454     06E1  191F               	btfsc	31,2	;volatile
   455     06E2  2EE4               	goto	u311
   456     06E3  2EE5               	goto	u310
   457     06E4                     u311:
   458     06E4  2EDF               	goto	l76
   459     06E5                     u310:
   460     06E5                     l917:
   461                           
   462                           ;main.c: 156:     adc_high=ADRESH;
   463     06E5  081E               	movf	30,w	;volatile
   464     06E6  00C3               	movwf	??_main
   465     06E7  01C4               	clrf	??_main+1
   466     06E8  0843               	movf	??_main,w
   467     06E9  00B2               	movwf	_adc_high
   468     06EA  0844               	movf	??_main+1,w
   469     06EB  00B3               	movwf	_adc_high+1
   470                           
   471                           ;main.c: 157:     adc_low=ADRESL;
   472     06EC  1683               	bsf	3,5	;RP0=1, select bank1
   473     06ED  1303               	bcf	3,6	;RP1=0, select bank1
   474     06EE  081E               	movf	30,w	;volatile
   475     06EF  1283               	bcf	3,5	;RP0=0, select bank0
   476     06F0  1303               	bcf	3,6	;RP1=0, select bank0
   477     06F1  00C3               	movwf	??_main
   478     06F2  01C4               	clrf	??_main+1
   479     06F3  0843               	movf	??_main,w
   480     06F4  00B0               	movwf	_adc_low
   481     06F5  0844               	movf	??_main+1,w
   482     06F6  00B1               	movwf	_adc_low+1
   483                           
   484                           ;main.c: 158:     adc_volt =(adc_high<<8) | (adc_low);
   485     06F7  0832               	movf	_adc_high,w
   486     06F8  00C4               	movwf	??_main+1
   487     06F9  01C3               	clrf	??_main
   488     06FA  0830               	movf	_adc_low,w
   489     06FB  0443               	iorwf	??_main,w
   490     06FC  00AC               	movwf	_adc_volt
   491     06FD  0831               	movf	_adc_low+1,w
   492     06FE  0444               	iorwf	??_main+1,w
   493     06FF  00AD               	movwf	_adc_volt+1
   494     0700                     l919:
   495                           
   496                           ;main.c: 159:     calibrated_val=(adc_volt*48)/1024;
   497     0700  082D               	movf	_adc_volt+1,w
   498     0701  00F8               	movwf	___wmul@multiplier+1
   499     0702  082C               	movf	_adc_volt,w
   500     0703  00F7               	movwf	___wmul@multiplier
   501     0704  3030               	movlw	48
   502     0705  00F9               	movwf	___wmul@multiplicand
   503     0706  3000               	movlw	0
   504     0707  00FA               	movwf	___wmul@multiplicand+1
   505     0708  120A  118A  2615  120A  118A  	fcall	___wmul
   506     070D  0877               	movf	?___wmul,w
   507     070E  1283               	bcf	3,5	;RP0=0, select bank0
   508     070F  1303               	bcf	3,6	;RP1=0, select bank0
   509     0710  00C3               	movwf	??_main
   510     0711  0878               	movf	?___wmul+1,w
   511     0712  00C4               	movwf	??_main+1
   512     0713  300A               	movlw	10
   513     0714                     u325:
   514     0714  1003               	clrc
   515     0715  0CC4               	rrf	??_main+1,f
   516     0716  0CC3               	rrf	??_main,f
   517     0717  3EFF               	addlw	-1
   518     0718  1D03               	skipz
   519     0719  2F14               	goto	u325
   520     071A  0843               	movf	??_main,w
   521     071B  00AE               	movwf	_calibrated_val
   522     071C  0844               	movf	??_main+1,w
   523     071D  00AF               	movwf	_calibrated_val+1
   524     071E                     l921:
   525                           
   526                           ;main.c: 160:     lcd_command(0x80);
   527     071E  3080               	movlw	128
   528     071F  120A  118A  25F8  120A  118A  	fcall	_lcd_command
   529     0724                     l923:
   530                           
   531                           ;main.c: 162:     lcd_num_conv(calibrated_val);
   532     0724  1283               	bcf	3,5	;RP0=0, select bank0
   533     0725  1303               	bcf	3,6	;RP1=0, select bank0
   534     0726  082F               	movf	_calibrated_val+1,w
   535     0727  00B5               	movwf	lcd_num_conv@i+1
   536     0728  082E               	movf	_calibrated_val,w
   537     0729  00B4               	movwf	lcd_num_conv@i
   538     072A  120A  118A  273D  120A  118A  	fcall	_lcd_num_conv
   539     072F                     l925:
   540                           
   541                           ;main.c: 163:     _delay((unsigned long)((20)*(6000000/4000.0)));
   542     072F  3027               	movlw	39
   543     0730  1283               	bcf	3,5	;RP0=0, select bank0
   544     0731  1303               	bcf	3,6	;RP1=0, select bank0
   545     0732  00C4               	movwf	??_main+1
   546     0733  30F4               	movlw	244
   547     0734  00C3               	movwf	??_main
   548     0735                     u357:
   549     0735  0BC3               	decfsz	??_main,f
   550     0736  2F35               	goto	u357
   551     0737  0BC4               	decfsz	??_main+1,f
   552     0738  2F35               	goto	u357
   553     0739  0000               	nop
   554     073A                     l79:
   555     073A  120A  118A  2800   	ljmp	start
   556     073D                     __end_of_main:
   557                           
   558                           	psect	text1
   559     073D                     __ptext1:	
   560 ;; *************** function _lcd_num_conv *****************
   561 ;; Defined at:
   562 ;;		line 108 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  i               2    0[BANK0 ] unsigned int 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  k               5    6[BANK0 ] unsigned char [5]
   567 ;;  m               2   13[BANK0 ] unsigned int 
   568 ;;  j               2   11[BANK0 ] int 
   569 ;;  s               2    4[BANK0 ] int 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       2       0       0       0
   580 ;;      Locals:         0      11       0       0       0
   581 ;;      Temps:          0       2       0       0       0
   582 ;;      Totals:         0      15       0       0       0
   583 ;;Total ram usage:       15 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 1
   586 ;; This function calls:
   587 ;;		___lwdiv
   588 ;;		___wmul
   589 ;;		_lcd_command
   590 ;;		_lcd_data
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596     073D                     _lcd_num_conv:	
   597                           ;psect for function _lcd_num_conv
   598                           
   599     073D                     l863:	
   600                           ;incstack = 0
   601                           ; Regs used in _lcd_num_conv: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   602                           
   603                           
   604                           ;main.c: 109:     int j=1,s;
   605     073D  3001               	movlw	1
   606     073E  1283               	bcf	3,5	;RP0=0, select bank0
   607     073F  1303               	bcf	3,6	;RP1=0, select bank0
   608     0740  00BF               	movwf	lcd_num_conv@j
   609     0741  3000               	movlw	0
   610     0742  00C0               	movwf	lcd_num_conv@j+1
   611                           
   612                           ;main.c: 110:     unsigned int m;;main.c: 111:     unsigned char k[5];;main.c: 112:     
      +                          m=i;
   613     0743  0835               	movf	lcd_num_conv@i+1,w
   614     0744  00C2               	movwf	lcd_num_conv@m+1
   615     0745  0834               	movf	lcd_num_conv@i,w
   616     0746  00C1               	movwf	lcd_num_conv@m
   617                           
   618                           ;main.c: 113:     while(m!=0){
   619     0747  2F8B               	goto	l873
   620     0748                     l865:
   621                           
   622                           ;main.c: 114:         s=(m-(m/10)*10);
   623     0748  300A               	movlw	10
   624     0749  00F0               	movwf	___lwdiv@divisor
   625     074A  3000               	movlw	0
   626     074B  00F1               	movwf	___lwdiv@divisor+1
   627     074C  0842               	movf	lcd_num_conv@m+1,w
   628     074D  00F3               	movwf	___lwdiv@dividend+1
   629     074E  0841               	movf	lcd_num_conv@m,w
   630     074F  00F2               	movwf	___lwdiv@dividend
   631     0750  120A  118A  263A  120A  118A  	fcall	___lwdiv
   632     0755  0871               	movf	?___lwdiv+1,w
   633     0756  00F8               	movwf	___wmul@multiplier+1
   634     0757  0870               	movf	?___lwdiv,w
   635     0758  00F7               	movwf	___wmul@multiplier
   636     0759  30F6               	movlw	246
   637     075A  00F9               	movwf	___wmul@multiplicand
   638     075B  30FF               	movlw	255
   639     075C  00FA               	movwf	___wmul@multiplicand+1
   640     075D  120A  118A  2615  120A  118A  	fcall	___wmul
   641     0762  1283               	bcf	3,5	;RP0=0, select bank0
   642     0763  1303               	bcf	3,6	;RP1=0, select bank0
   643     0764  0841               	movf	lcd_num_conv@m,w
   644     0765  0777               	addwf	?___wmul,w
   645     0766  00B8               	movwf	lcd_num_conv@s
   646     0767  0842               	movf	lcd_num_conv@m+1,w
   647     0768  1803               	skipnc
   648     0769  0A42               	incf	lcd_num_conv@m+1,w
   649     076A  0778               	addwf	?___wmul+1,w
   650     076B  00B9               	movwf	lcd_num_conv@s+1
   651     076C                     l867:
   652                           
   653                           ;main.c: 115:         k[j]=s;
   654     076C  083F               	movf	lcd_num_conv@j,w
   655     076D  3E3A               	addlw	(low (lcd_num_conv@k| 0))& (0+255)
   656     076E  0084               	movwf	4
   657     076F  0838               	movf	lcd_num_conv@s,w
   658     0770  1383               	bcf	3,7	;select IRP bank0
   659     0771  0080               	movwf	0
   660     0772                     l869:
   661                           
   662                           ;main.c: 116:         j++;
   663     0772  3001               	movlw	1
   664     0773  07BF               	addwf	lcd_num_conv@j,f
   665     0774  1803               	skipnc
   666     0775  0AC0               	incf	lcd_num_conv@j+1,f
   667     0776  3000               	movlw	0
   668     0777  07C0               	addwf	lcd_num_conv@j+1,f
   669     0778                     l871:
   670                           
   671                           ;main.c: 117:         m=m/10;
   672     0778  300A               	movlw	10
   673     0779  00F0               	movwf	___lwdiv@divisor
   674     077A  3000               	movlw	0
   675     077B  00F1               	movwf	___lwdiv@divisor+1
   676     077C  0842               	movf	lcd_num_conv@m+1,w
   677     077D  00F3               	movwf	___lwdiv@dividend+1
   678     077E  0841               	movf	lcd_num_conv@m,w
   679     077F  00F2               	movwf	___lwdiv@dividend
   680     0780  120A  118A  263A  120A  118A  	fcall	___lwdiv
   681     0785  0871               	movf	?___lwdiv+1,w
   682     0786  1283               	bcf	3,5	;RP0=0, select bank0
   683     0787  1303               	bcf	3,6	;RP1=0, select bank0
   684     0788  00C2               	movwf	lcd_num_conv@m+1
   685     0789  0870               	movf	?___lwdiv,w
   686     078A  00C1               	movwf	lcd_num_conv@m
   687     078B                     l873:
   688                           
   689                           ;main.c: 113:     while(m!=0){
   690     078B  0841               	movf	lcd_num_conv@m,w
   691     078C  0442               	iorwf	lcd_num_conv@m+1,w
   692     078D  1D03               	btfss	3,2
   693     078E  2F90               	goto	u291
   694     078F  2F91               	goto	u290
   695     0790                     u291:
   696     0790  2F48               	goto	l865
   697     0791                     u290:
   698     0791                     l875:
   699                           
   700                           ;main.c: 119:     k[j]='\0';
   701     0791  083F               	movf	lcd_num_conv@j,w
   702     0792  3E3A               	addlw	(low (lcd_num_conv@k| 0))& (0+255)
   703     0793  0084               	movwf	4
   704     0794  1383               	bcf	3,7	;select IRP bank0
   705     0795  0180               	clrf	0
   706     0796                     l877:
   707                           
   708                           ;main.c: 120:     j--;
   709     0796  30FF               	movlw	255
   710     0797  07BF               	addwf	lcd_num_conv@j,f
   711     0798  1803               	skipnc
   712     0799  0AC0               	incf	lcd_num_conv@j+1,f
   713     079A  30FF               	movlw	255
   714     079B  07C0               	addwf	lcd_num_conv@j+1,f
   715     079C                     l879:
   716                           
   717                           ;main.c: 125:     if(k[2]>0){
   718     079C  083C               	movf	lcd_num_conv@k+2,w
   719     079D  1903               	btfsc	3,2
   720     079E  2FA0               	goto	u301
   721     079F  2FA1               	goto	u300
   722     07A0                     u301:
   723     07A0  2FC0               	goto	l883
   724     07A1                     u300:
   725     07A1                     l881:
   726                           
   727                           ;main.c: 126:         lcd_command(0x80);
   728     07A1  3080               	movlw	128
   729     07A2  120A  118A  25F8  120A  118A  	fcall	_lcd_command
   730                           
   731                           ;main.c: 127:         lcd_data(0x30 +k[2]);
   732     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   733     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   734     07A9  083C               	movf	lcd_num_conv@k+2,w
   735     07AA  3E30               	addlw	48
   736     07AB  120A  118A  25DC  120A  118A  	fcall	_lcd_data
   737                           
   738                           ;main.c: 129:         lcd_command(0x81);
   739     07B0  3081               	movlw	129
   740     07B1  120A  118A  25F8  120A  118A  	fcall	_lcd_command
   741                           
   742                           ;main.c: 130:         lcd_data(0x30+k[1]);
   743     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   744     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   745     07B8  083B               	movf	lcd_num_conv@k+1,w
   746     07B9  3E30               	addlw	48
   747     07BA  120A  118A  25DC  120A  118A  	fcall	_lcd_data
   748                           
   749                           ;main.c: 131:     }
   750     07BF  2FDB               	goto	l69
   751     07C0                     l883:
   752                           
   753                           ;main.c: 133:         lcd_command(0x80);
   754     07C0  3080               	movlw	128
   755     07C1  120A  118A  25F8  120A  118A  	fcall	_lcd_command
   756                           
   757                           ;main.c: 134:         lcd_data(0x20);
   758     07C6  3020               	movlw	32
   759     07C7  120A  118A  25DC  120A  118A  	fcall	_lcd_data
   760                           
   761                           ;main.c: 135:         lcd_command(0x81);
   762     07CC  3081               	movlw	129
   763     07CD  120A  118A  25F8  120A  118A  	fcall	_lcd_command
   764                           
   765                           ;main.c: 136:         lcd_data(0x30+k[1]);
   766     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   767     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   768     07D4  083B               	movf	lcd_num_conv@k+1,w
   769     07D5  3E30               	addlw	48
   770     07D6  120A  118A  25DC  120A  118A  	fcall	_lcd_data
   771     07DB                     l69:	
   772                           ;main.c: 137:     }
   773                           
   774                           
   775                           ;main.c: 138:     lcd_command(0x82);
   776     07DB  3082               	movlw	130
   777     07DC  120A  118A  25F8  120A  118A  	fcall	_lcd_command
   778                           
   779                           ;main.c: 139:     lcd_data(0x76);
   780     07E1  3076               	movlw	118
   781     07E2  120A  118A  25DC  120A  118A  	fcall	_lcd_data
   782     07E7                     l885:
   783                           
   784                           ;main.c: 140:     _delay((unsigned long)((5)*(6000000/4000.0)));
   785     07E7  300A               	movlw	10
   786     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   787     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   788     07EA  00B7               	movwf	??_lcd_num_conv+1
   789     07EB  30BB               	movlw	187
   790     07EC  00B6               	movwf	??_lcd_num_conv
   791     07ED                     u367:
   792     07ED  0BB6               	decfsz	??_lcd_num_conv,f
   793     07EE  2FED               	goto	u367
   794     07EF  0BB7               	decfsz	??_lcd_num_conv+1,f
   795     07F0  2FED               	goto	u367
   796     07F1  2FF2               	nop2
   797     07F2                     l70:
   798     07F2  0008               	return
   799     07F3                     __end_of_lcd_num_conv:
   800                           
   801                           	psect	text2
   802     05DC                     __ptext2:	
   803 ;; *************** function _lcd_data *****************
   804 ;; Defined at:
   805 ;;		line 58 in file "main.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  data            1    wreg     unsigned char 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  data            1    2[COMMON] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0
   821 ;;      Temps:          2       0       0       0       0
   822 ;;      Totals:         3       0       0       0       0
   823 ;;Total ram usage:        3 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_lcd_num_conv
   829 ;;		_lcd_number_convert
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833     05DC                     _lcd_data:	
   834                           ;psect for function _lcd_data
   835                           
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   839                           ;lcd_data@data stored from wreg
   840     05DC  00F2               	movwf	lcd_data@data
   841     05DD                     l787:
   842                           
   843                           ;main.c: 59:     PORTC |= 0x08;
   844     05DD  1283               	bcf	3,5	;RP0=0, select bank0
   845     05DE  1303               	bcf	3,6	;RP1=0, select bank0
   846     05DF  1587               	bsf	7,3	;volatile
   847     05E0                     l789:
   848                           
   849                           ;main.c: 60:     PORTD = data;
   850     05E0  0872               	movf	lcd_data@data,w
   851     05E1  0088               	movwf	8	;volatile
   852     05E2                     l791:
   853                           
   854                           ;main.c: 61:     PORTC |= 0x01;
   855     05E2  1407               	bsf	7,0	;volatile
   856                           
   857                           ;main.c: 62:     _delay((unsigned long)((1)*(6000000/4000.0)));
   858     05E3  30D6               	movlw	214
   859     05E4  00F0               	movwf	??_lcd_data
   860     05E5                     u377:
   861     05E5  2DE6               	nop2
   862     05E6  2DE7               	nop2
   863     05E7  0BF0               	decfsz	??_lcd_data,f
   864     05E8  2DE5               	goto	u377
   865     05E9  0000               	nop
   866     05EA                     l793:
   867                           
   868                           ;main.c: 63:     PORTC &= ~0x01;
   869     05EA  30FE               	movlw	254
   870     05EB  1283               	bcf	3,5	;RP0=0, select bank0
   871     05EC  1303               	bcf	3,6	;RP1=0, select bank0
   872     05ED  0587               	andwf	7,f	;volatile
   873     05EE                     l795:
   874                           
   875                           ;main.c: 64:     _delay((unsigned long)((2)*(6000000/4000.0)));
   876     05EE  3004               	movlw	4
   877     05EF  00F1               	movwf	??_lcd_data+1
   878     05F0  30E4               	movlw	228
   879     05F1  00F0               	movwf	??_lcd_data
   880     05F2                     u387:
   881     05F2  0BF0               	decfsz	??_lcd_data,f
   882     05F3  2DF2               	goto	u387
   883     05F4  0BF1               	decfsz	??_lcd_data+1,f
   884     05F5  2DF2               	goto	u387
   885     05F6  0000               	nop
   886     05F7                     l53:
   887     05F7  0008               	return
   888     05F8                     __end_of_lcd_data:
   889                           
   890                           	psect	text3
   891     0615                     __ptext3:	
   892 ;; *************** function ___wmul *****************
   893 ;; Defined at:
   894 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  multiplier      2    7[COMMON] unsigned int 
   897 ;;  multiplicand    2    9[COMMON] unsigned int 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  product         2   11[COMMON] unsigned int 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2    7[COMMON] unsigned int 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         4       0       0       0       0
   910 ;;      Locals:         2       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         6       0       0       0       0
   913 ;;Total ram usage:        6 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_lcd_num_conv
   919 ;;		_main
   920 ;;		_lcd_number_convert
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924     0615                     ___wmul:	
   925                           ;psect for function ___wmul
   926                           
   927     0615                     l797:	
   928                           ;incstack = 0
   929                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   930                           
   931     0615  01FB               	clrf	___wmul@product
   932     0616  01FC               	clrf	___wmul@product+1
   933     0617                     l799:
   934     0617  1C77               	btfss	___wmul@multiplier,0
   935     0618  2E1A               	goto	u171
   936     0619  2E1B               	goto	u170
   937     061A                     u171:
   938     061A  2E21               	goto	l167
   939     061B                     u170:
   940     061B                     l801:
   941     061B  0879               	movf	___wmul@multiplicand,w
   942     061C  07FB               	addwf	___wmul@product,f
   943     061D  1803               	skipnc
   944     061E  0AFC               	incf	___wmul@product+1,f
   945     061F  087A               	movf	___wmul@multiplicand+1,w
   946     0620  07FC               	addwf	___wmul@product+1,f
   947     0621                     l167:
   948     0621  3001               	movlw	1
   949     0622                     u185:
   950     0622  1003               	clrc
   951     0623  0DF9               	rlf	___wmul@multiplicand,f
   952     0624  0DFA               	rlf	___wmul@multiplicand+1,f
   953     0625  3EFF               	addlw	-1
   954     0626  1D03               	skipz
   955     0627  2E22               	goto	u185
   956     0628                     l803:
   957     0628  3001               	movlw	1
   958     0629                     u195:
   959     0629  1003               	clrc
   960     062A  0CF8               	rrf	___wmul@multiplier+1,f
   961     062B  0CF7               	rrf	___wmul@multiplier,f
   962     062C  3EFF               	addlw	-1
   963     062D  1D03               	skipz
   964     062E  2E29               	goto	u195
   965     062F                     l805:
   966     062F  0877               	movf	___wmul@multiplier,w
   967     0630  0478               	iorwf	___wmul@multiplier+1,w
   968     0631  1D03               	btfss	3,2
   969     0632  2E34               	goto	u201
   970     0633  2E35               	goto	u200
   971     0634                     u201:
   972     0634  2E17               	goto	l799
   973     0635                     u200:
   974     0635                     l807:
   975     0635  087C               	movf	___wmul@product+1,w
   976     0636  00F8               	movwf	?___wmul+1
   977     0637  087B               	movf	___wmul@product,w
   978     0638  00F7               	movwf	?___wmul
   979     0639                     l169:
   980     0639  0008               	return
   981     063A                     __end_of___wmul:
   982                           
   983                           	psect	text4
   984     063A                     __ptext4:	
   985 ;; *************** function ___lwdiv *****************
   986 ;; Defined at:
   987 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  divisor         2    0[COMMON] unsigned int 
   990 ;;  dividend        2    2[COMMON] unsigned int 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  quotient        2    4[COMMON] unsigned int 
   993 ;;  counter         1    6[COMMON] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2    0[COMMON] unsigned int 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         4       0       0       0       0
  1004 ;;      Locals:         3       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0
  1006 ;;      Totals:         7       0       0       0       0
  1007 ;;Total ram usage:        7 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_lcd_num_conv
  1013 ;;		_lcd_number_convert
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017     063A                     ___lwdiv:	
  1018                           ;psect for function ___lwdiv
  1019                           
  1020     063A                     l811:	
  1021                           ;incstack = 0
  1022                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1023                           
  1024     063A  01F4               	clrf	___lwdiv@quotient
  1025     063B  01F5               	clrf	___lwdiv@quotient+1
  1026     063C                     l813:
  1027     063C  0870               	movf	___lwdiv@divisor,w
  1028     063D  0471               	iorwf	___lwdiv@divisor+1,w
  1029     063E  1903               	btfsc	3,2
  1030     063F  2E41               	goto	u211
  1031     0640  2E42               	goto	u210
  1032     0641                     u211:
  1033     0641  2E77               	goto	l833
  1034     0642                     u210:
  1035     0642                     l815:
  1036     0642  3001               	movlw	1
  1037     0643  00F6               	movwf	___lwdiv@counter
  1038     0644  2E4E               	goto	l821
  1039     0645                     l817:
  1040     0645  3001               	movlw	1
  1041     0646                     u225:
  1042     0646  1003               	clrc
  1043     0647  0DF0               	rlf	___lwdiv@divisor,f
  1044     0648  0DF1               	rlf	___lwdiv@divisor+1,f
  1045     0649  3EFF               	addlw	-1
  1046     064A  1D03               	skipz
  1047     064B  2E46               	goto	u225
  1048     064C                     l819:
  1049     064C  3001               	movlw	1
  1050     064D  07F6               	addwf	___lwdiv@counter,f
  1051     064E                     l821:
  1052     064E  1FF1               	btfss	___lwdiv@divisor+1,7
  1053     064F  2E51               	goto	u231
  1054     0650  2E52               	goto	u230
  1055     0651                     u231:
  1056     0651  2E45               	goto	l817
  1057     0652                     u230:
  1058     0652                     l823:
  1059     0652  3001               	movlw	1
  1060     0653                     u245:
  1061     0653  1003               	clrc
  1062     0654  0DF4               	rlf	___lwdiv@quotient,f
  1063     0655  0DF5               	rlf	___lwdiv@quotient+1,f
  1064     0656  3EFF               	addlw	-1
  1065     0657  1D03               	skipz
  1066     0658  2E53               	goto	u245
  1067     0659  0871               	movf	___lwdiv@divisor+1,w
  1068     065A  0273               	subwf	___lwdiv@dividend+1,w
  1069     065B  1D03               	skipz
  1070     065C  2E5F               	goto	u255
  1071     065D  0870               	movf	___lwdiv@divisor,w
  1072     065E  0272               	subwf	___lwdiv@dividend,w
  1073     065F                     u255:
  1074     065F  1C03               	skipc
  1075     0660  2E62               	goto	u251
  1076     0661  2E63               	goto	u250
  1077     0662                     u251:
  1078     0662  2E6A               	goto	l829
  1079     0663                     u250:
  1080     0663                     l825:
  1081     0663  0870               	movf	___lwdiv@divisor,w
  1082     0664  02F2               	subwf	___lwdiv@dividend,f
  1083     0665  0871               	movf	___lwdiv@divisor+1,w
  1084     0666  1C03               	skipc
  1085     0667  03F3               	decf	___lwdiv@dividend+1,f
  1086     0668  02F3               	subwf	___lwdiv@dividend+1,f
  1087     0669                     l827:
  1088     0669  1474               	bsf	___lwdiv@quotient,0
  1089     066A                     l829:
  1090     066A  3001               	movlw	1
  1091     066B                     u265:
  1092     066B  1003               	clrc
  1093     066C  0CF1               	rrf	___lwdiv@divisor+1,f
  1094     066D  0CF0               	rrf	___lwdiv@divisor,f
  1095     066E  3EFF               	addlw	-1
  1096     066F  1D03               	skipz
  1097     0670  2E6B               	goto	u265
  1098     0671                     l831:
  1099     0671  3001               	movlw	1
  1100     0672  02F6               	subwf	___lwdiv@counter,f
  1101     0673  1D03               	btfss	3,2
  1102     0674  2E76               	goto	u271
  1103     0675  2E77               	goto	u270
  1104     0676                     u271:
  1105     0676  2E52               	goto	l823
  1106     0677                     u270:
  1107     0677                     l833:
  1108     0677  0875               	movf	___lwdiv@quotient+1,w
  1109     0678  00F1               	movwf	?___lwdiv+1
  1110     0679  0874               	movf	___lwdiv@quotient,w
  1111     067A  00F0               	movwf	?___lwdiv
  1112     067B                     l447:
  1113     067B  0008               	return
  1114     067C                     __end_of___lwdiv:
  1115                           
  1116                           	psect	text5
  1117     067C                     __ptext5:	
  1118 ;; *************** function _initLCD *****************
  1119 ;; Defined at:
  1120 ;;		line 40 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 1
  1141 ;; This function calls:
  1142 ;;		_lcd_command
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148     067C                     _initLCD:	
  1149                           ;psect for function _initLCD
  1150                           
  1151     067C                     l837:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1154                           
  1155                           
  1156                           ;main.c: 43:     TRISC = 0x00;
  1157     067C  1683               	bsf	3,5	;RP0=1, select bank1
  1158     067D  1303               	bcf	3,6	;RP1=0, select bank1
  1159     067E  0187               	clrf	7	;volatile
  1160                           
  1161                           ;main.c: 44:     TRISD = 0x00;
  1162     067F  0188               	clrf	8	;volatile
  1163     0680                     l839:
  1164                           
  1165                           ;main.c: 45:     TRISB =0xF0;
  1166     0680  30F0               	movlw	240
  1167     0681  0086               	movwf	6	;volatile
  1168     0682                     l841:
  1169                           
  1170                           ;main.c: 46:     PORTB=0xF0;
  1171     0682  30F0               	movlw	240
  1172     0683  1283               	bcf	3,5	;RP0=0, select bank0
  1173     0684  1303               	bcf	3,6	;RP1=0, select bank0
  1174     0685  0086               	movwf	6	;volatile
  1175     0686                     l843:
  1176                           
  1177                           ;main.c: 48:     lcd_command(0x38);
  1178     0686  3038               	movlw	56
  1179     0687  120A  118A  25F8  120A  118A  	fcall	_lcd_command
  1180     068C                     l845:
  1181                           
  1182                           ;main.c: 49:     _delay((unsigned long)((5)*(6000000/4000.0)));
  1183     068C  300A               	movlw	10
  1184     068D  00F4               	movwf	??_initLCD+1
  1185     068E  30BC               	movlw	188
  1186     068F  00F3               	movwf	??_initLCD
  1187     0690                     u397:
  1188     0690  0BF3               	decfsz	??_initLCD,f
  1189     0691  2E90               	goto	u397
  1190     0692  0BF4               	decfsz	??_initLCD+1,f
  1191     0693  2E90               	goto	u397
  1192     0694  0000               	nop
  1193     0695                     l847:
  1194                           
  1195                           ;main.c: 50:     lcd_command(0x0C);
  1196     0695  300C               	movlw	12
  1197     0696  120A  118A  25F8  120A  118A  	fcall	_lcd_command
  1198     069B                     l849:
  1199                           
  1200                           ;main.c: 51:     _delay((unsigned long)((5)*(6000000/4000.0)));
  1201     069B  300A               	movlw	10
  1202     069C  00F4               	movwf	??_initLCD+1
  1203     069D  30BC               	movlw	188
  1204     069E  00F3               	movwf	??_initLCD
  1205     069F                     u407:
  1206     069F  0BF3               	decfsz	??_initLCD,f
  1207     06A0  2E9F               	goto	u407
  1208     06A1  0BF4               	decfsz	??_initLCD+1,f
  1209     06A2  2E9F               	goto	u407
  1210     06A3  0000               	nop
  1211     06A4                     l851:
  1212                           
  1213                           ;main.c: 52:     lcd_command(0x06);
  1214     06A4  3006               	movlw	6
  1215     06A5  120A  118A  25F8  120A  118A  	fcall	_lcd_command
  1216     06AA                     l853:
  1217                           
  1218                           ;main.c: 53:     _delay((unsigned long)((5)*(6000000/4000.0)));
  1219     06AA  300A               	movlw	10
  1220     06AB  00F4               	movwf	??_initLCD+1
  1221     06AC  30BC               	movlw	188
  1222     06AD  00F3               	movwf	??_initLCD
  1223     06AE                     u417:
  1224     06AE  0BF3               	decfsz	??_initLCD,f
  1225     06AF  2EAE               	goto	u417
  1226     06B0  0BF4               	decfsz	??_initLCD+1,f
  1227     06B1  2EAE               	goto	u417
  1228     06B2  0000               	nop
  1229     06B3                     l855:
  1230                           
  1231                           ;main.c: 54:     lcd_command(0x01);
  1232     06B3  3001               	movlw	1
  1233     06B4  120A  118A  25F8  120A  118A  	fcall	_lcd_command
  1234     06B9                     l857:
  1235                           
  1236                           ;main.c: 55:     _delay((unsigned long)((5)*(6000000/4000.0)));
  1237     06B9  300A               	movlw	10
  1238     06BA  00F4               	movwf	??_initLCD+1
  1239     06BB  30BC               	movlw	188
  1240     06BC  00F3               	movwf	??_initLCD
  1241     06BD                     u427:
  1242     06BD  0BF3               	decfsz	??_initLCD,f
  1243     06BE  2EBD               	goto	u427
  1244     06BF  0BF4               	decfsz	??_initLCD+1,f
  1245     06C0  2EBD               	goto	u427
  1246     06C1  0000               	nop
  1247     06C2                     l50:
  1248     06C2  0008               	return
  1249     06C3                     __end_of_initLCD:
  1250                           
  1251                           	psect	text6
  1252     05F8                     __ptext6:	
  1253 ;; *************** function _lcd_command *****************
  1254 ;; Defined at:
  1255 ;;		line 29 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  cmd             1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  cmd             1    2[COMMON] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0
  1271 ;;      Temps:          2       0       0       0       0
  1272 ;;      Totals:         3       0       0       0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_initLCD
  1279 ;;		_lcd_num_conv
  1280 ;;		_main
  1281 ;;		_lcd_number_convert
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285     05F8                     _lcd_command:	
  1286                           ;psect for function _lcd_command
  1287                           
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _lcd_command: [wreg+status,2+status,0]
  1291                           ;lcd_command@cmd stored from wreg
  1292     05F8  00F2               	movwf	lcd_command@cmd
  1293     05F9                     l777:
  1294                           
  1295                           ;main.c: 30:     PORTC &= ~0x08;
  1296     05F9  30F7               	movlw	247
  1297     05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1298     05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1299     05FC  0587               	andwf	7,f	;volatile
  1300     05FD                     l779:
  1301                           
  1302                           ;main.c: 31:     PORTD = cmd;
  1303     05FD  0872               	movf	lcd_command@cmd,w
  1304     05FE  0088               	movwf	8	;volatile
  1305     05FF                     l781:
  1306                           
  1307                           ;main.c: 32:     PORTC |= 0x01;
  1308     05FF  1407               	bsf	7,0	;volatile
  1309     0600                     l783:
  1310                           
  1311                           ;main.c: 33:     _delay((unsigned long)((1)*(6000000/4000.0)));
  1312     0600  30D6               	movlw	214
  1313     0601  00F0               	movwf	??_lcd_command
  1314     0602                     u437:
  1315     0602  2E03               	nop2
  1316     0603  2E04               	nop2
  1317     0604  0BF0               	decfsz	??_lcd_command,f
  1318     0605  2E02               	goto	u437
  1319     0606  0000               	nop
  1320                           
  1321                           ;main.c: 34:     PORTC &= ~0x01;
  1322     0607  30FE               	movlw	254
  1323     0608  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0609  1303               	bcf	3,6	;RP1=0, select bank0
  1325     060A  0587               	andwf	7,f	;volatile
  1326     060B                     l785:
  1327                           
  1328                           ;main.c: 35:     _delay((unsigned long)((2)*(6000000/4000.0)));
  1329     060B  3004               	movlw	4
  1330     060C  00F1               	movwf	??_lcd_command+1
  1331     060D  30E4               	movlw	228
  1332     060E  00F0               	movwf	??_lcd_command
  1333     060F                     u447:
  1334     060F  0BF0               	decfsz	??_lcd_command,f
  1335     0610  2E0F               	goto	u447
  1336     0611  0BF1               	decfsz	??_lcd_command+1,f
  1337     0612  2E0F               	goto	u447
  1338     0613  0000               	nop
  1339     0614                     l47:
  1340     0614  0008               	return
  1341     0615                     __end_of_lcd_command:
  1342                           
  1343                           	psect	text7
  1344     05C8                     __ptext7:	
  1345 ;; *************** function _delay_ms *****************
  1346 ;; Defined at:
  1347 ;;		line 101 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  count           2    0[COMMON] unsigned int 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  i               2    2[COMMON] int 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         2       0       0       0       0
  1362 ;;      Locals:         2       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0
  1364 ;;      Totals:         4       0       0       0       0
  1365 ;;Total ram usage:        4 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374     05C8                     _delay_ms:	
  1375                           ;psect for function _delay_ms
  1376                           
  1377     05C8                     l859:	
  1378                           ;incstack = 0
  1379                           ; Regs used in _delay_ms: [wreg+status,2]
  1380                           
  1381                           
  1382                           ;main.c: 103:     for(int i=0;i<count;i++){
  1383     05C8  01F2               	clrf	delay_ms@i
  1384     05C9  01F3               	clrf	delay_ms@i+1
  1385     05CA  2DD1               	goto	l59
  1386     05CB                     l861:
  1387                           
  1388                           ;main.c: 105:     }
  1389     05CB  3001               	movlw	1
  1390     05CC  07F2               	addwf	delay_ms@i,f
  1391     05CD  1803               	skipnc
  1392     05CE  0AF3               	incf	delay_ms@i+1,f
  1393     05CF  3000               	movlw	0
  1394     05D0  07F3               	addwf	delay_ms@i+1,f
  1395     05D1                     l59:
  1396     05D1  0871               	movf	delay_ms@count+1,w
  1397     05D2  0273               	subwf	delay_ms@i+1,w
  1398     05D3  1D03               	skipz
  1399     05D4  2DD7               	goto	u285
  1400     05D5  0870               	movf	delay_ms@count,w
  1401     05D6  0272               	subwf	delay_ms@i,w
  1402     05D7                     u285:
  1403     05D7  1C03               	skipc
  1404     05D8  2DDA               	goto	u281
  1405     05D9  2DDB               	goto	u280
  1406     05DA                     u281:
  1407     05DA  2DCB               	goto	l861
  1408     05DB                     u280:
  1409     05DB                     l62:
  1410     05DB  0008               	return
  1411     05DC                     __end_of_delay_ms:
  1412     0002                     ___latbits      equ	2
  1413     007E                     btemp           set	126	;btemp
  1414     007E                     wtemp0          set	126
  1415                           
  1416                           	psect	config
  1417                           
  1418                           ;Config register CONFIG @ 0x2007
  1419                           ;	Oscillator Selection bits
  1420                           ;	FOSC = EXTRC, RC oscillator
  1421                           ;	Watchdog Timer Enable bit
  1422                           ;	WDTE = OFF, WDT disabled
  1423                           ;	Power-up Timer Enable bit
  1424                           ;	PWRTE = OFF, PWRT disabled
  1425                           ;	Brown-out Reset Enable bit
  1426                           ;	BOREN = OFF, BOR disabled
  1427                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1428                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1429                           ;	Data EEPROM Memory Code Protection bit
  1430                           ;	CPD = OFF, Data EEPROM code protection off
  1431                           ;	Flash Program Memory Write Enable bits
  1432                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1433                           ;	In-Circuit Debugger Mode bit
  1434                           ;	DEBUG = 0x1, unprogrammed default
  1435                           ;	Flash Program Memory Code Protection bit
  1436                           ;	CP = OFF, Code protection off
  1437     2007                     	org	8199
  1438     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     17      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _lcd_num_conv->___wmul
    ___wmul->___lwdiv
    _initLCD->_lcd_command

Critical Paths under _main in BANK0

    _main->_lcd_num_conv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     862
                                             15 BANK0      2     2      0
                             ___wmul
                           _delay_ms
                            _initLCD
                        _lcd_command
                       _lcd_num_conv
 ---------------------------------------------------------------------------------
 (1) _lcd_num_conv                                        15    13      2     655
                                              0 BANK0     15    13      2
                            ___lwdiv
                             ___wmul
                        _lcd_command
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     102
                                              7 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     172
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      29
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2      47
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
     ___lwdiv (ARG)
   _delay_ms
   _initLCD
     _lcd_command
   _lcd_command
   _lcd_num_conv
     ___lwdiv
     ___wmul
     _lcd_command
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     13      13     92.9%
BANK0               80     17      37     46.2%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      50      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat May 03 02:41:38 2025

                      _i 002A                        _j 0028             lcd_data@data 0072  
                     l50 06C2                       l53 05F7                       l62 05DB  
                     l70 07F2                       l47 0614                       l59 05D1  
                     l76 06DF                       l69 07DB                       l79 073A  
          ?_lcd_num_conv 0034                       _d1 0026                       _d2 0024  
                     _d3 0022                       _d4 0020                       fsr 0004  
    ___wmul@multiplicand 0079                      l167 0621                      l169 0639  
                    l447 067B                      l801 061B                      l811 063A  
                    l803 0628                      l821 064E                      l813 063C  
                    l805 062F                      l831 0671                      l823 0652  
                    l815 0642                      l807 0635                      l911 06CC  
                    l841 0682                      l825 0663                      l817 0645  
                    l833 0677                      l921 071E                      l913 06D0  
                    l851 06A4                      l843 0686                      l827 0669  
                    l819 064C                      l923 0724                      l915 06D3  
                    l907 06C3                      l861 05CB                      l781 05FF  
                    l853 06AA                      l845 068C                      l837 067C  
                    l829 066A                      l925 072F                      l917 06E5  
                    l909 06C8                      l783 0600                      l855 06B3  
                    l847 0695                      l839 0680                      l791 05E2  
                    l871 0778                      l863 073D                      l919 0700  
                    l785 060B                      l777 05F9                      l857 06B9  
                    l849 069B                      l793 05EA                      l881 07A1  
                    l865 0748                      l873 078B                      l859 05C8  
                    l779 05FD                      l795 05EE                      l787 05DD  
                    l883 07C0                      l875 0791                      l867 076C  
                    l797 0615                      l789 05E0                      l885 07E7  
                    l877 0796                      l869 0772                      l799 0617  
                    l879 079C                      u200 0635                      u201 0634  
                    u210 0642                      u211 0641                      u300 07A1  
                    u301 07A0                      u230 0652                      u310 06E5  
                    u231 0651                      u311 06E4                      u225 0646  
                    u250 0663                      u170 061B                      u251 0662  
                    u171 061A                      u245 0653                      u325 0714  
                    u270 0677                      u407 069F                      u271 0676  
                    u255 065F                      u280 05DB                      u281 05DA  
                    u417 06AE                      u265 066B                      u185 0622  
                    u290 0791                      u427 06BD                      u195 0629  
                    u291 0790                      u285 05D7                      u437 0602  
                    u357 0735                      u447 060F                      u367 07ED  
                    u377 05E5                      u387 05F2                      u397 0690  
                    fsr0 0004                      indf 0000                     _main 06C3  
                   btemp 007E                     start 0000           ??_lcd_num_conv 0036  
                  ?_main 0070          __end_of___lwdiv 067C                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_initLCD 06C3  
                  status 0003                    wtemp0 007E          __initialization 07F3  
           __end_of_main 073D                   ??_main 0043           lcd_command@cmd 0072  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _TRISA0 0428            lcd_num_conv@i 0034  
          lcd_num_conv@j 003F            lcd_num_conv@k 003A            lcd_num_conv@m 0041  
          lcd_num_conv@s 0038         __end_of_delay_ms 05DC         __end_of_lcd_data 05F8  
                 ___wmul 0615                ??___lwdiv 0074                ??_initLCD 0073  
   __end_of_lcd_num_conv 07F3  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pbssBANK0 0020               __pmaintext 06C3                  ?___wmul 0077  
              ?_delay_ms 0070                ?_lcd_data 0070                  _adc_low 0030  
                ___lwdiv 063A                  __ptext1 073D                  __ptext2 05DC  
                __ptext3 0615                  __ptext4 063A                  __ptext5 067C  
                __ptext6 05F8                  __ptext7 05C8                  _initLCD 067C  
             ??_delay_ms 0072               ??_lcd_data 0070                  clrloop0 05C1  
   end_of_initialization 07FC             _lcd_num_conv 073D            ??_lcd_command 0070  
         __end_of___wmul 063A            delay_ms@count 0070      start_initialization 07F3  
               ??___wmul 007B      __end_of_lcd_command 0615                ___latbits 0002  
          __pcstackBANK0 0034         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?_initLCD 0070         ___lwdiv@quotient 0074           ___wmul@product 007B  
              delay_ms@i 0072                clear_ram0 05C0              _lcd_command 05F8  
      ___wmul@multiplier 0077                 _adc_high 0032                 _adc_volt 002C  
               _delay_ms 05C8          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               _lcd_data 05DC           _calibrated_val 002E             ?_lcd_command 0070  
